{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-cloudwatch": "1.94.1",
    "@aws-cdk/aws-iam": "1.94.1",
    "@aws-cdk/aws-logs": "1.94.1",
    "@aws-cdk/aws-sns": "1.94.1",
    "@aws-cdk/core": "1.94.1",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Chatbot",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.24.0 (build b722f66)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::Chatbot",
    "aws-chatbot"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-chatbot",
  "readme": {
    "markdown": "# AWS::Chatbot Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n> All classes with the `Cfn` prefix in this module ([CFN Resources]) are always stable and safe to use.\n>\n> [CFN Resources]: https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nAWS Chatbot is an AWS service that enables DevOps and software development teams to use Slack chat rooms to monitor and respond to operational events in their AWS Cloud. AWS Chatbot processes AWS service notifications from Amazon Simple Notification Service (Amazon SNS), and forwards them to Slack chat rooms so teams can analyze and act on them immediately, regardless of location.\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n```ts\nimport * as chatbot from '@aws-cdk/aws-chatbot';\n\nconst slackChannel = new chatbot.SlackChannelConfiguration(this, 'MySlackChannel', {\n  slackChannelConfigurationName: 'YOUR_CHANNEL_NAME',\n  slackWorkspaceId: 'YOUR_SLACK_WORKSPACE_ID',\n  slackChannelId: 'YOUR_SLACK_CHANNEL_ID',\n});\n\nslackChannel.addToPrincipalPolicy(new iam.PolicyStatement({\n  effect: iam.Effect.ALLOW,\n  actions: [\n    's3:GetObject',\n  ],\n  resources: ['arn:aws:s3:::abc/xyz/123.txt'],\n}));\n```\n\n## Log Group\n\nSlack channel configuration automatically create a log group with the name `/aws/chatbot/<configuration-name>` in `us-east-1` upon first execution with\nlog data set to never expire.\n\nThe `logRetention` property can be used to set a different expiration period. A log group will be created if not already exists.\nIf the log group already exists, it's expiration will be configured to the value specified in this construct (never expire, by default).\n\nBy default, CDK uses the AWS SDK retry options when interacting with the log group. The `logRetentionRetryOptions` property\nallows you to customize the maximum number of retries and base backoff duration.\n\n*Note* that, if `logRetention` is set, a [CloudFormation custom\nresource](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cfn-customresource.html) is added\nto the stack that pre-creates the log group as part of the stack deployment, if it already doesn't exist, and sets the\ncorrect log retention period (never expire, by default).\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-chatbot",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Chatbot",
      "packageId": "Amazon.CDK.AWS.Chatbot"
    },
    "java": {
      "maven": {
        "artifactId": "chatbot",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.chatbot"
    },
    "js": {
      "npm": "@aws-cdk/aws-chatbot"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-chatbot",
      "module": "aws_cdk.aws_chatbot"
    }
  },
  "types": {
    "@aws-cdk/aws-chatbot.CfnSlackChannelConfiguration": {
      "assembly": "@aws-cdk/aws-chatbot",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Chatbot::SlackChannelConfiguration",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Chatbot::SlackChannelConfiguration`."
      },
      "fqn": "@aws-cdk/aws-chatbot.CfnSlackChannelConfiguration",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Chatbot::SlackChannelConfiguration`."
        },
        "locationInModule": {
          "filename": "lib/chatbot.generated.ts",
          "line": 197
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-chatbot.CfnSlackChannelConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/chatbot.generated.ts",
        "line": 124
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 220
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 236
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnSlackChannelConfiguration",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 128
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Arn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 152
          },
          "name": "attrArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 225
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-configurationname"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.ConfigurationName`."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 158
          },
          "name": "configurationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-iamrolearn"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.IamRoleArn`."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 164
          },
          "name": "iamRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackchannelid"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.SlackChannelId`."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 170
          },
          "name": "slackChannelId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackworkspaceid"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.SlackWorkspaceId`."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 176
          },
          "name": "slackWorkspaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-logginglevel"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.LoggingLevel`."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 182
          },
          "name": "loggingLevel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-snstopicarns"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.SnsTopicArns`."
          },
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 188
          },
          "name": "snsTopicArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-chatbot.CfnSlackChannelConfigurationProps": {
      "assembly": "@aws-cdk/aws-chatbot",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Chatbot::SlackChannelConfiguration`."
      },
      "fqn": "@aws-cdk/aws-chatbot.CfnSlackChannelConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/chatbot.generated.ts",
        "line": 17
      },
      "name": "CfnSlackChannelConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-configurationname"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.ConfigurationName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 23
          },
          "name": "configurationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-iamrolearn"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.IamRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 29
          },
          "name": "iamRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackchannelid"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.SlackChannelId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 35
          },
          "name": "slackChannelId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackworkspaceid"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.SlackWorkspaceId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 41
          },
          "name": "slackWorkspaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-logginglevel"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.LoggingLevel`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 47
          },
          "name": "loggingLevel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-snstopicarns"
            },
            "stability": "external",
            "summary": "`AWS::Chatbot::SlackChannelConfiguration.SnsTopicArns`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/chatbot.generated.ts",
            "line": 53
          },
          "name": "snsTopicArns",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-chatbot.ISlackChannelConfiguration": {
      "assembly": "@aws-cdk/aws-chatbot",
      "docs": {
        "stability": "experimental",
        "summary": "Represents a Slack channel configuration."
      },
      "fqn": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/slack-channel-configuration.ts",
        "line": 108
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Adds a statement to the IAM role."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 134
          },
          "name": "addToRolePolicy",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for this SlackChannelConfiguration."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 139
          },
          "name": "metric",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "ISlackChannelConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the Slack channel configuration In the form of arn:aws:chatbot:{region}:{account}:chat-configuration/slack-channel/{slackChannelName}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 115
          },
          "name": "slackChannelConfigurationArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 121
          },
          "name": "slackChannelConfigurationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "default": "- A role will be created.",
            "stability": "experimental",
            "summary": "The permission role of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 129
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-chatbot.LoggingLevel": {
      "assembly": "@aws-cdk/aws-chatbot",
      "docs": {
        "stability": "experimental",
        "summary": "Logging levels include ERROR, INFO, or NONE."
      },
      "fqn": "@aws-cdk/aws-chatbot.LoggingLevel",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/slack-channel-configuration.ts",
        "line": 88
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "ERROR."
          },
          "name": "ERROR"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "INFO."
          },
          "name": "INFO"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "NONE."
          },
          "name": "NONE"
        }
      ],
      "name": "LoggingLevel"
    },
    "@aws-cdk/aws-chatbot.SlackChannelConfiguration": {
      "assembly": "@aws-cdk/aws-chatbot",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A new Slack channel configuration."
      },
      "fqn": "@aws-cdk/aws-chatbot.SlackChannelConfiguration",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/slack-channel-configuration.ts",
          "line": 255
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-chatbot.SlackChannelConfigurationProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-chatbot.ISlackChannelConfiguration"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/slack-channel-configuration.ts",
        "line": 187
      },
      "methods": [
        {
          "docs": {
            "returns": "a reference to the existing Slack channel configuration",
            "stability": "experimental",
            "summary": "Import an existing Slack channel configuration provided an ARN."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 197
          },
          "name": "fromSlackChannelConfigurationArn",
          "parameters": [
            {
              "docs": {
                "summary": "The parent creating construct."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "The construct's name."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "configuration ARN (i.e. arn:aws:chatbot::1234567890:chat-configuration/slack-channel/my-slack)."
              },
              "name": "slackChannelConfigurationArn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for All SlackChannelConfigurations."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 236
          },
          "name": "metricAll",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds extra permission to iam-role of Slack channel configuration."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 158
          },
          "name": "addToRolePolicy",
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "parameters": [
            {
              "name": "statement",
              "type": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Return the given named metric for this SlackChannelConfiguration."
          },
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 169
          },
          "name": "metric",
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "parameters": [
            {
              "name": "metricName",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "props",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-cloudwatch.MetricOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-cloudwatch.Metric"
            }
          }
        }
      ],
      "name": "SlackChannelConfiguration",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 253
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The ARN of the Slack channel configuration In the form of arn:aws:chatbot:{region}:{account}:chat-configuration/slack-channel/{slackChannelName}."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 247
          },
          "name": "slackChannelConfigurationArn",
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 249
          },
          "name": "slackChannelConfigurationName",
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The permission role of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 251
          },
          "name": "role",
          "optional": true,
          "overrides": "@aws-cdk/aws-chatbot.ISlackChannelConfiguration",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-chatbot.SlackChannelConfigurationProps": {
      "assembly": "@aws-cdk/aws-chatbot",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a new Slack channel configuration."
      },
      "fqn": "@aws-cdk/aws-chatbot.SlackChannelConfigurationProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/slack-channel-configuration.ts",
        "line": 12
      },
      "name": "SlackChannelConfigurationProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 17
          },
          "name": "slackChannelConfigurationName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "To get the ID, open Slack, right click on the channel name in the left pane, then choose Copy Link.\nThe channel ID is the 9-character string at the end of the URL. For example, ABCBBLZZZ.",
            "stability": "experimental",
            "summary": "The ID of the Slack channel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 42
          },
          "name": "slackChannelId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "To get the workspace ID, you must perform the initial authorization flow with Slack in the AWS Chatbot console.\nThen you can copy and paste the workspace ID from the console.\nFor more details, see steps 1-4 in Setting Up AWS Chatbot with Slack in the AWS Chatbot User Guide.",
            "see": "https://docs.aws.amazon.com/chatbot/latest/adminguide/setting-up.html#Setup_intro",
            "stability": "experimental",
            "summary": "The ID of the Slack workspace authorized with AWS Chatbot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 34
          },
          "name": "slackWorkspaceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "LoggingLevel.NONE",
            "remarks": "This property affects the log entries pushed to Amazon CloudWatch Logs.",
            "stability": "experimental",
            "summary": "Specifies the logging level for this configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 57
          },
          "name": "loggingLevel",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-chatbot.LoggingLevel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "logs.RetentionDays.INFINITE",
            "remarks": "When updating\nthis property, unsetting it doesn't remove the log retention policy. To\nremove the retention policy, set the value to `INFINITE`.",
            "stability": "experimental",
            "summary": "The number of days log events are kept in CloudWatch Logs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 66
          },
          "name": "logRetention",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.RetentionDays"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default AWS SDK retry options.",
            "remarks": "These options control the retry policy when interacting with CloudWatch APIs.",
            "stability": "experimental",
            "summary": "When log retention is specified, a custom resource attempts to create the CloudWatch log group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 82
          },
          "name": "logRetentionRetryOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.LogRetentionRetryOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new role is created.",
            "stability": "experimental",
            "summary": "The IAM role for the Lambda function associated with the custom resource that sets the retention policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 74
          },
          "name": "logRetentionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "None",
            "stability": "experimental",
            "summary": "The SNS topics that deliver notifications to AWS Chatbot."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 49
          },
          "name": "notificationTopics",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-sns.ITopic"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will be created.",
            "stability": "experimental",
            "summary": "The permission role of Slack channel configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/slack-channel-configuration.ts",
            "line": 24
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    }
  },
  "version": "1.94.1",
  "fingerprint": "aN78kDaFmmH96WaZBrL5WF/ab1xPyNtS00rk8Tij7Ho="
}
