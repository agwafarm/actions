{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-dynamodb": "1.94.1",
    "@aws-cdk/aws-ec2": "1.94.1",
    "@aws-cdk/aws-efs": "1.94.1",
    "@aws-cdk/aws-events": "1.94.1",
    "@aws-cdk/aws-iam": "1.94.1",
    "@aws-cdk/aws-kms": "1.94.1",
    "@aws-cdk/aws-rds": "1.94.1",
    "@aws-cdk/aws-sns": "1.94.1",
    "@aws-cdk/core": "1.94.1",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-dynamodb": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.DynamoDB",
          "packageId": "Amazon.CDK.AWS.DynamoDB"
        },
        "java": {
          "maven": {
            "artifactId": "dynamodb",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.dynamodb"
        },
        "js": {
          "npm": "@aws-cdk/aws-dynamodb"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-dynamodb",
          "module": "aws_cdk.aws_dynamodb"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-rds": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.RDS",
          "packageId": "Amazon.CDK.AWS.RDS"
        },
        "java": {
          "maven": {
            "artifactId": "rds",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.rds"
        },
        "js": {
          "npm": "@aws-cdk/aws-rds"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-rds",
          "module": "aws_cdk.aws_rds"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::Backup",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.24.0 (build b722f66)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::Backup",
    "aws-backup"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-backup",
  "readme": {
    "markdown": "# AWS Backup Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n> All classes with the `Cfn` prefix in this module ([CFN Resources]) are always stable and safe to use.\n>\n> [CFN Resources]: https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\nAWS Backup is a fully managed backup service that makes it easy to centralize and automate the backup of data across AWS services in the cloud and on premises. Using AWS Backup, you can configure backup policies and monitor backup activity for your AWS resources in one place.\n\n## Backup plan and selection\n\nIn AWS Backup, a *backup plan* is a policy expression that defines when and how you want to back up your AWS resources, such as Amazon DynamoDB tables or Amazon Elastic File System (Amazon EFS) file systems. You can assign resources to backup plans, and AWS Backup automatically backs up and retains backups for those resources according to the backup plan. You can create multiple backup plans if you have workloads with different backup requirements.\n\nThis module provides ready-made backup plans (similar to the console experience):\n\n```ts\nimport * as backup from '@aws-cdk/aws-backup';\n\n// Daily, weekly and monthly with 5 year retention\nconst plan = backup.BackupPlan.dailyWeeklyMonthly5YearRetention(this, 'Plan');\n```\n\nAssigning resources to a plan can be done with `addSelection()`:\n\n```ts\nplan.addSelection('Selection', {\n  resources: [\n    backup.BackupResource.fromDynamoDbTable(myTable), // A DynamoDB table\n    backup.BackupResource.fromTag('stage', 'prod'), // All resources that are tagged stage=prod in the region/account\n    backup.BackupResource.fromConstruct(myCoolConstruct), // All backupable resources in `myCoolConstruct`\n  ]\n})\n```\n\nIf not specified, a new IAM role with a managed policy for backup will be\ncreated for the selection. The `BackupSelection` implements `IGrantable`.\n\nTo add rules to a plan, use `addRule()`:\n\n```ts\nplan.addRule(new BackupPlanRule({\n  completionWindow: Duration.hours(2),\n  startWindow: Duration.hours(1),\n  scheduleExpression: events.Schedule.cron({ // Only cron expressions are supported\n    day: '15',\n    hour: '3',\n    minute: '30'\n  }),\n  moveToColdStorageAfter: Duration.days(30)\n}));\n```\n\nReady-made rules are also available:\n\n```ts\nplan.addRule(BackupPlanRule.daily());\nplan.addRule(BackupPlanRule.weekly());\n```\n\nBy default a new [vault](#Backup-vault) is created when creating a plan.\nIt is also possible to specify a vault either at the plan level or at the\nrule level.\n\n```ts\nconst plan = backup.BackupPlan.daily35DayRetention(this, 'Plan', myVault); // Use `myVault` for all plan rules\nplan.addRule(BackupPlanRule.monthly1Year(otherVault)); // Use `otherVault` for this specific rule\n```\n\n## Backup vault\n\nIn AWS Backup, a *backup vault* is a container that you organize your backups in. You can use backup vaults to set the AWS Key Management Service (AWS KMS) encryption key that is used to encrypt backups in the backup vault and to control access to the backups in the backup vault. If you require different encryption keys or access policies for different groups of backups, you can optionally create multiple backup vaults.\n\n```ts\nconst vault = new BackupVault(stack, 'Vault', {\n  encryptionKey: myKey, // Custom encryption key\n  notificationTopic: myTopic, // Send all vault events to this SNS topic\n});\n```\n\nA vault has a default `RemovalPolicy` set to `RETAIN`. Note that removing a vault\nthat contains recovery points will fail.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-backup",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.Backup",
      "packageId": "Amazon.CDK.AWS.Backup"
    },
    "java": {
      "maven": {
        "artifactId": "backup",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.backup"
    },
    "js": {
      "npm": "@aws-cdk/aws-backup"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-backup",
      "module": "aws_cdk.aws_backup"
    }
  },
  "types": {
    "@aws-cdk/aws-backup.BackupPlan": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A backup plan."
      },
      "fqn": "@aws-cdk/aws-backup.BackupPlan",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/plan.ts",
          "line": 122
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-backup.IBackupPlan"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/plan.ts",
        "line": 51
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Daily with 35 day retention."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 65
          },
          "name": "daily35DayRetention",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Daily and monthly with 1 year retention."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 74
          },
          "name": "dailyMonthly1YearRetention",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Daily, weekly and monthly with 5 year retention."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 84
          },
          "name": "dailyWeeklyMonthly5YearRetention",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Daily, weekly and monthly with 7 year retention."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 95
          },
          "name": "dailyWeeklyMonthly7YearRetention",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing backup plan."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 55
          },
          "name": "fromBackupPlanId",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupPlanId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.IBackupPlan"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a rule to a plan."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 148
          },
          "name": "addRule",
          "parameters": [
            {
              "docs": {
                "summary": "the rule to add."
              },
              "name": "rule",
              "type": {
                "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds a selection to this plan."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 188
          },
          "name": "addSelection",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-backup.BackupSelectionOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupSelection"
            }
          }
        },
        {
          "docs": {
            "remarks": "This method can be implemented by derived constructs in order to perform\nvalidation logic. It is called on all constructs before synthesis.",
            "stability": "experimental",
            "summary": "Validate the current construct."
          },
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 195
          },
          "name": "validate",
          "overrides": "@aws-cdk/core.Construct",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "string"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "BackupPlan",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 110
          },
          "name": "backupPlanArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The identifier of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 103
          },
          "name": "backupPlanId",
          "overrides": "@aws-cdk/aws-backup.IBackupPlan",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The backup vault where backups are stored if not defined at the rule level."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 176
          },
          "name": "backupVault",
          "type": {
            "fqn": "@aws-cdk/aws-backup.IBackupVault"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "Version Id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 117
          },
          "name": "versionId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.BackupPlanProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a BackupPlan."
      },
      "fqn": "@aws-cdk/aws-backup.BackupPlanProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/plan.ts",
        "line": 23
      },
      "name": "BackupPlanProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- A CDK generated name",
            "stability": "experimental",
            "summary": "The display name of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 29
          },
          "name": "backupPlanName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use `addRule()` to add rules",
            "remarks": "Use `addRule()` to add rules after\ninstantiation.",
            "stability": "experimental",
            "summary": "Rules for the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 45
          },
          "name": "backupPlanRules",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- use the vault defined at the rule level. If not defined a new\ncommon vault for the plan will be created",
            "stability": "experimental",
            "summary": "The backup vault where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 37
          },
          "name": "backupVault",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-backup.IBackupVault"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.BackupPlanRule": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "experimental",
        "summary": "A backup plan rule."
      },
      "fqn": "@aws-cdk/aws-backup.BackupPlanRule",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/rule.ts",
          "line": 150
        },
        "parameters": [
          {
            "docs": {
              "summary": "Rule properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRuleProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 66
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Daily with 35 days retention."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 70
          },
          "name": "daily",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Monthly 1 year retention, move to cold storage after 1 month."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 101
          },
          "name": "monthly1Year",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Monthly 5 year retention, move to cold storage after 3 months."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 118
          },
          "name": "monthly5Year",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Monthly 7 year retention, move to cold storage after 3 months."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 135
          },
          "name": "monthly7Year",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Weekly with 3 months retention."
          },
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 85
          },
          "name": "weekly",
          "parameters": [
            {
              "name": "backupVault",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.IBackupVault"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupPlanRule"
            }
          },
          "static": true
        }
      ],
      "name": "BackupPlanRule",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Rule properties."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 150
          },
          "name": "props",
          "type": {
            "fqn": "@aws-cdk/aws-backup.BackupPlanRuleProps"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.BackupPlanRuleProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a BackupPlanRule."
      },
      "fqn": "@aws-cdk/aws-backup.BackupPlanRuleProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/rule.ts",
        "line": 8
      },
      "name": "BackupPlanRuleProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- use the vault defined at the plan level. If not defined a new\ncommon vault for the plan will be created",
            "stability": "experimental",
            "summary": "The backup vault where backups are."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 60
          },
          "name": "backupVault",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-backup.IBackupVault"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 8 hours",
            "stability": "experimental",
            "summary": "The duration after a backup job is successfully started before it must be completed or it is canceled by AWS Backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 15
          },
          "name": "completionWindow",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- recovery point is never deleted",
            "remarks": "Must be greater than `moveToColdStorageAfter`.",
            "stability": "experimental",
            "summary": "Specifies the duration after creation that a recovery point is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 23
          },
          "name": "deleteAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- recovery point is never moved to cold storage",
            "stability": "experimental",
            "summary": "Specifies the duration after creation that a recovery point is moved to cold storage."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 31
          },
          "name": "moveToColdStorageAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a CDK generated name",
            "stability": "experimental",
            "summary": "A display name for the backup rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 38
          },
          "name": "ruleName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no schedule",
            "stability": "experimental",
            "summary": "A CRON expression specifying when AWS Backup initiates a backup job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 45
          },
          "name": "scheduleExpression",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-events.Schedule"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 8 hours",
            "stability": "experimental",
            "summary": "The duration after a backup is scheduled before a job is canceled if it doesn't start successfully."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/rule.ts",
            "line": 52
          },
          "name": "startWindow",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.BackupResource": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "experimental",
        "summary": "A resource to backup."
      },
      "fqn": "@aws-cdk/aws-backup.BackupResource",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/resource.ts",
          "line": 139
        },
        "parameters": [
          {
            "name": "resource",
            "optional": true,
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "tagCondition",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-backup.TagCondition"
            }
          },
          {
            "name": "construct",
            "optional": true,
            "type": {
              "fqn": "constructs.Construct"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 59
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "A list of ARNs or match patterns such as `arn:aws:ec2:us-east-1:123456789012:volume/*`."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 109
          },
          "name": "fromArn",
          "parameters": [
            {
              "name": "arn",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds all supported resources in a construct."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 65
          },
          "name": "fromConstruct",
          "parameters": [
            {
              "docs": {
                "summary": "The construct containing resources to backup."
              },
              "name": "construct",
              "type": {
                "fqn": "constructs.Construct"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A DynamoDB table."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 72
          },
          "name": "fromDynamoDbTable",
          "parameters": [
            {
              "name": "table",
              "type": {
                "fqn": "@aws-cdk/aws-dynamodb.ITable"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "An EC2 instance."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 79
          },
          "name": "fromEc2Instance",
          "parameters": [
            {
              "name": "instance",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IInstance"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "An EFS file system."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 90
          },
          "name": "fromEfsFileSystem",
          "parameters": [
            {
              "name": "fileSystem",
              "type": {
                "fqn": "@aws-cdk/aws-efs.IFileSystem"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A RDS database instance."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 101
          },
          "name": "fromRdsDatabaseInstance",
          "parameters": [
            {
              "name": "instance",
              "type": {
                "fqn": "@aws-cdk/aws-rds.IDatabaseInstance"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A tag condition."
          },
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 116
          },
          "name": "fromTag",
          "parameters": [
            {
              "name": "key",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "operation",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-backup.TagOperation"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupResource"
            }
          },
          "static": true
        }
      ],
      "name": "BackupResource",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "A construct."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 137
          },
          "name": "construct",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Construct"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A resource."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 127
          },
          "name": "resource",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "A condition on a tag."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 132
          },
          "name": "tagCondition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-backup.TagCondition"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.BackupSelection": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A backup selection."
      },
      "fqn": "@aws-cdk/aws-backup.BackupSelection",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/selection.ts",
          "line": 82
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupSelectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/selection.ts",
        "line": 58
      },
      "name": "BackupSelection",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The identifier of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 64
          },
          "name": "backupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 76
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The identifier of the backup selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 71
          },
          "name": "selectionId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.BackupSelectionOptions": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options for a BackupSelection."
      },
      "fqn": "@aws-cdk/aws-backup.BackupSelectionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/selection.ts",
        "line": 12
      },
      "name": "BackupSelectionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Use the helper static methods defined on `BackupResource`.",
            "stability": "experimental",
            "summary": "The resources to backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 17
          },
          "name": "resources",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-backup.BackupResource"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If `true`, the `AWSBackupServiceRolePolicyForRestores` managed\npolicy will be attached to the role.",
            "stability": "experimental",
            "summary": "Whether to automatically give restores permissions to the role that AWS Backup uses."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 42
          },
          "name": "allowRestores",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a CDK generated name",
            "stability": "experimental",
            "summary": "The name for this selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 24
          },
          "name": "backupSelectionName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a new role will be created",
            "remarks": "The `AWSBackupServiceRolePolicyForBackup` managed policy\nwill be attached to this role.",
            "stability": "experimental",
            "summary": "The role that AWS Backup uses to authenticate when backuping or restoring the resources."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 33
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.BackupSelectionProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a BackupSelection."
      },
      "fqn": "@aws-cdk/aws-backup.BackupSelectionProps",
      "interfaces": [
        "@aws-cdk/aws-backup.BackupSelectionOptions"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/selection.ts",
        "line": 48
      },
      "name": "BackupSelectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The backup plan for this selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/selection.ts",
            "line": 52
          },
          "name": "backupPlan",
          "type": {
            "fqn": "@aws-cdk/aws-backup.IBackupPlan"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.BackupVault": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "stability": "experimental",
        "summary": "A backup vault."
      },
      "fqn": "@aws-cdk/aws-backup.BackupVault",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/vault.ts",
          "line": 134
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-backup.BackupVaultProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-backup.IBackupVault"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/vault.ts",
        "line": 114
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing backup vault."
          },
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 118
          },
          "name": "fromBackupVaultName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "backupVaultName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-backup.IBackupVault"
            }
          },
          "static": true
        }
      ],
      "name": "BackupVault",
      "properties": [
        {
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The ARN of the backup vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 132
          },
          "name": "backupVaultArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of a logical container where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 125
          },
          "name": "backupVaultName",
          "overrides": "@aws-cdk/aws-backup.IBackupVault",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.BackupVaultEvents": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "experimental",
        "summary": "Backup vault events."
      },
      "fqn": "@aws-cdk/aws-backup.BackupVaultEvents",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/vault.ts",
        "line": 78
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "BACKUP_JOB_STARTED."
          },
          "name": "BACKUP_JOB_STARTED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "BACKUP_JOB_COMPLETED."
          },
          "name": "BACKUP_JOB_COMPLETED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "BACKUP_JOB_SUCCESSFUL."
          },
          "name": "BACKUP_JOB_SUCCESSFUL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "BACKUP_JOB_FAILED."
          },
          "name": "BACKUP_JOB_FAILED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "BACKUP_JOB_EXPIRED."
          },
          "name": "BACKUP_JOB_EXPIRED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "RESTORE_JOB_STARTED."
          },
          "name": "RESTORE_JOB_STARTED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "RESTORE_JOB_COMPLETED."
          },
          "name": "RESTORE_JOB_COMPLETED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "RESTORE_JOB_SUCCESSFUL."
          },
          "name": "RESTORE_JOB_SUCCESSFUL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "RESTORE_JOB_FAILED."
          },
          "name": "RESTORE_JOB_FAILED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "COPY_JOB_STARTED."
          },
          "name": "COPY_JOB_STARTED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "COPY_JOB_SUCCESSFUL."
          },
          "name": "COPY_JOB_SUCCESSFUL"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "COPY_JOB_FAILED."
          },
          "name": "COPY_JOB_FAILED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "RECOVERY_POINT_MODIFIED."
          },
          "name": "RECOVERY_POINT_MODIFIED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "BACKUP_PLAN_CREATED."
          },
          "name": "BACKUP_PLAN_CREATED"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "BACKUP_PLAN_MODIFIED."
          },
          "name": "BACKUP_PLAN_MODIFIED"
        }
      ],
      "name": "BackupVaultEvents"
    },
    "@aws-cdk/aws-backup.BackupVaultProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a BackupVault."
      },
      "fqn": "@aws-cdk/aws-backup.BackupVaultProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vault.ts",
        "line": 23
      },
      "name": "BackupVaultProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- access is not restricted",
            "stability": "experimental",
            "summary": "A resource-based policy that is used to manage access permissions on the backup vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 39
          },
          "name": "accessPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.PolicyDocument"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A CDK generated name",
            "remarks": "Backup vaults\nare identified by names that are unique to the account used to create\nthem and the AWS Region where they are created.",
            "stability": "experimental",
            "summary": "The name of a logical container where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 31
          },
          "name": "backupVaultName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- an Amazon managed KMS key",
            "stability": "experimental",
            "summary": "The server-side encryption key to use to protect your backups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 46
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- all vault events if `notificationTopic` is defined",
            "see": "https://docs.aws.amazon.com/aws-backup/latest/devguide/sns-notifications.html",
            "stability": "experimental",
            "summary": "The vault events to send."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 64
          },
          "name": "notificationEvents",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-backup.BackupVaultEvents"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no notifications",
            "see": "https://docs.aws.amazon.com/aws-backup/latest/devguide/sns-notifications.html",
            "stability": "experimental",
            "summary": "A SNS topic to send vault events to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 55
          },
          "name": "notificationTopic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.RETAIN",
            "remarks": "Note that removing a vault\nthat contains recovery points will fail.",
            "stability": "experimental",
            "summary": "The removal policy to apply to the vault."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 72
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupPlan": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Backup::BackupPlan",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Backup::BackupPlan`."
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Backup::BackupPlan`."
        },
        "locationInModule": {
          "filename": "lib/backup.generated.ts",
          "line": 144
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.CfnBackupPlanProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 85
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 162
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 174
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnBackupPlan",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 89
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupPlanArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 113
          },
          "name": "attrBackupPlanArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupPlanId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 118
          },
          "name": "attrBackupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "VersionId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 123
          },
          "name": "attrVersionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 167
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplan"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupPlan.BackupPlan`."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 129
          },
          "name": "backupPlan",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplantags"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupPlan.BackupPlanTags`."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 135
          },
          "name": "backupPlanTags",
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-advancedbackupsettingresourcetype.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 184
      },
      "name": "AdvancedBackupSettingResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-advancedbackupsettingresourcetype.html#cfn-backup-backupplan-advancedbackupsettingresourcetype-backupoptions"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty.BackupOptions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 189
          },
          "name": "backupOptions",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-advancedbackupsettingresourcetype.html#cfn-backup-backupplan-advancedbackupsettingresourcetype-resourcetype"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty.ResourceType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 194
          },
          "name": "resourceType",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupplanresourcetype.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 253
      },
      "name": "BackupPlanResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupplanresourcetype.html#cfn-backup-backupplan-backupplanresourcetype-backupplanname"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupPlanResourceTypeProperty.BackupPlanName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 263
          },
          "name": "backupPlanName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupplanresourcetype.html#cfn-backup-backupplan-backupplanresourcetype-backupplanrule"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupPlanResourceTypeProperty.BackupPlanRule`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 268
          },
          "name": "backupPlanRule",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupRuleResourceTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupplanresourcetype.html#cfn-backup-backupplan-backupplanresourcetype-advancedbackupsettings"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupPlanResourceTypeProperty.AdvancedBackupSettings`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 258
          },
          "name": "advancedBackupSettings",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.AdvancedBackupSettingResourceTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.BackupRuleResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupRuleResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 330
      },
      "name": "BackupRuleResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-rulename"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupRuleResourceTypeProperty.RuleName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 355
          },
          "name": "ruleName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-targetbackupvault"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupRuleResourceTypeProperty.TargetBackupVault`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 370
          },
          "name": "targetBackupVault",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-completionwindowminutes"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupRuleResourceTypeProperty.CompletionWindowMinutes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 335
          },
          "name": "completionWindowMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-copyactions"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupRuleResourceTypeProperty.CopyActions`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 340
          },
          "name": "copyActions",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.CopyActionResourceTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-lifecycle"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupRuleResourceTypeProperty.Lifecycle`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 345
          },
          "name": "lifecycle",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-recoverypointtags"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupRuleResourceTypeProperty.RecoveryPointTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 350
          },
          "name": "recoveryPointTags",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-scheduleexpression"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupRuleResourceTypeProperty.ScheduleExpression`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 360
          },
          "name": "scheduleExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-backupruleresourcetype.html#cfn-backup-backupplan-backupruleresourcetype-startwindowminutes"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.BackupRuleResourceTypeProperty.StartWindowMinutes`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 365
          },
          "name": "startWindowMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.CopyActionResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-copyactionresourcetype.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.CopyActionResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 447
      },
      "name": "CopyActionResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-copyactionresourcetype.html#cfn-backup-backupplan-copyactionresourcetype-destinationbackupvaultarn"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.CopyActionResourceTypeProperty.DestinationBackupVaultArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 452
          },
          "name": "destinationBackupVaultArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-copyactionresourcetype.html#cfn-backup-backupplan-copyactionresourcetype-lifecycle"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.CopyActionResourceTypeProperty.Lifecycle`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 457
          },
          "name": "lifecycle",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-lifecycleresourcetype.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.LifecycleResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 515
      },
      "name": "LifecycleResourceTypeProperty",
      "namespace": "CfnBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-lifecycleresourcetype.html#cfn-backup-backupplan-lifecycleresourcetype-deleteafterdays"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.LifecycleResourceTypeProperty.DeleteAfterDays`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 520
          },
          "name": "deleteAfterDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupplan-lifecycleresourcetype.html#cfn-backup-backupplan-lifecycleresourcetype-movetocoldstorageafterdays"
            },
            "stability": "external",
            "summary": "`CfnBackupPlan.LifecycleResourceTypeProperty.MoveToColdStorageAfterDays`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 525
          },
          "name": "moveToColdStorageAfterDays",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupPlanProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Backup::BackupPlan`."
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupPlanProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 17
      },
      "name": "CfnBackupPlanProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplan"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupPlan.BackupPlan`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 23
          },
          "name": "backupPlan",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupPlan.BackupPlanResourceTypeProperty"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupplan.html#cfn-backup-backupplan-backupplantags"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupPlan.BackupPlanTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 29
          },
          "name": "backupPlanTags",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupSelection": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Backup::BackupSelection",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Backup::BackupSelection`."
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupSelection",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Backup::BackupSelection`."
        },
        "locationInModule": {
          "filename": "lib/backup.generated.ts",
          "line": 706
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.CfnBackupSelectionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 652
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 724
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 736
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnBackupSelection",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 656
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupPlanId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 680
          },
          "name": "attrBackupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "SelectionId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 685
          },
          "name": "attrSelectionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 729
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupplanid"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupSelection.BackupPlanId`."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 691
          },
          "name": "backupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupselection"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupSelection.BackupSelection`."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 697
          },
          "name": "backupSelection",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 746
      },
      "name": "BackupSelectionResourceTypeProperty",
      "namespace": "CfnBackupSelection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-iamrolearn"
            },
            "stability": "external",
            "summary": "`CfnBackupSelection.BackupSelectionResourceTypeProperty.IamRoleArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 751
          },
          "name": "iamRoleArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-selectionname"
            },
            "stability": "external",
            "summary": "`CfnBackupSelection.BackupSelectionResourceTypeProperty.SelectionName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 766
          },
          "name": "selectionName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-listoftags"
            },
            "stability": "external",
            "summary": "`CfnBackupSelection.BackupSelectionResourceTypeProperty.ListOfTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 756
          },
          "name": "listOfTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "union": {
                        "types": [
                          {
                            "fqn": "@aws-cdk/core.IResolvable"
                          },
                          {
                            "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.ConditionResourceTypeProperty"
                          }
                        ]
                      }
                    },
                    "kind": "array"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-backupselectionresourcetype.html#cfn-backup-backupselection-backupselectionresourcetype-resources"
            },
            "stability": "external",
            "summary": "`CfnBackupSelection.BackupSelectionResourceTypeProperty.Resources`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 761
          },
          "name": "resources",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupSelection.ConditionResourceTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionresourcetype.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.ConditionResourceTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 831
      },
      "name": "ConditionResourceTypeProperty",
      "namespace": "CfnBackupSelection",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionresourcetype.html#cfn-backup-backupselection-conditionresourcetype-conditionkey"
            },
            "stability": "external",
            "summary": "`CfnBackupSelection.ConditionResourceTypeProperty.ConditionKey`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 836
          },
          "name": "conditionKey",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionresourcetype.html#cfn-backup-backupselection-conditionresourcetype-conditiontype"
            },
            "stability": "external",
            "summary": "`CfnBackupSelection.ConditionResourceTypeProperty.ConditionType`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 841
          },
          "name": "conditionType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupselection-conditionresourcetype.html#cfn-backup-backupselection-conditionresourcetype-conditionvalue"
            },
            "stability": "external",
            "summary": "`CfnBackupSelection.ConditionResourceTypeProperty.ConditionValue`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 846
          },
          "name": "conditionValue",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupSelectionProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Backup::BackupSelection`."
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupSelectionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 583
      },
      "name": "CfnBackupSelectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupplanid"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupSelection.BackupPlanId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 589
          },
          "name": "backupPlanId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupselection.html#cfn-backup-backupselection-backupselection"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupSelection.BackupSelection`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 595
          },
          "name": "backupSelection",
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupSelection.BackupSelectionResourceTypeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupVault": {
      "assembly": "@aws-cdk/aws-backup",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::Backup::BackupVault",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::Backup::BackupVault`."
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupVault",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::Backup::BackupVault`."
        },
        "locationInModule": {
          "filename": "lib/backup.generated.ts",
          "line": 1077
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-backup.CfnBackupVaultProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1005
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1102
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1117
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnBackupVault",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1009
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupVaultArn"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1033
          },
          "name": "attrBackupVaultArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "BackupVaultName"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1038
          },
          "name": "attrBackupVaultName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1107
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-accesspolicy"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.AccessPolicy`."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1050
          },
          "name": "accessPolicy",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaultname"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.BackupVaultName`."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1044
          },
          "name": "backupVaultName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaulttags"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.BackupVaultTags`."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1056
          },
          "name": "backupVaultTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-encryptionkeyarn"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.EncryptionKeyArn`."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1062
          },
          "name": "encryptionKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-notifications"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.Notifications`."
          },
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1068
          },
          "name": "notifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-notificationobjecttype.html"
        },
        "stability": "external"
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 1127
      },
      "name": "NotificationObjectTypeProperty",
      "namespace": "CfnBackupVault",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-notificationobjecttype.html#cfn-backup-backupvault-notificationobjecttype-backupvaultevents"
            },
            "stability": "external",
            "summary": "`CfnBackupVault.NotificationObjectTypeProperty.BackupVaultEvents`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1132
          },
          "name": "backupVaultEvents",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-backup-backupvault-notificationobjecttype.html#cfn-backup-backupvault-notificationobjecttype-snstopicarn"
            },
            "stability": "external",
            "summary": "`CfnBackupVault.NotificationObjectTypeProperty.SNSTopicArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 1137
          },
          "name": "snsTopicArn",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.CfnBackupVaultProps": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::Backup::BackupVault`."
      },
      "fqn": "@aws-cdk/aws-backup.CfnBackupVaultProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/backup.generated.ts",
        "line": 910
      },
      "name": "CfnBackupVaultProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaultname"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.BackupVaultName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 916
          },
          "name": "backupVaultName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-accesspolicy"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.AccessPolicy`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 922
          },
          "name": "accessPolicy",
          "optional": true,
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaulttags"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.BackupVaultTags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 928
          },
          "name": "backupVaultTags",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "collection": {
                    "elementtype": {
                      "primitive": "string"
                    },
                    "kind": "map"
                  }
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-encryptionkeyarn"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.EncryptionKeyArn`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 934
          },
          "name": "encryptionKeyArn",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-notifications"
            },
            "stability": "external",
            "summary": "`AWS::Backup::BackupVault.Notifications`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/backup.generated.ts",
            "line": 940
          },
          "name": "notifications",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                },
                {
                  "fqn": "@aws-cdk/aws-backup.CfnBackupVault.NotificationObjectTypeProperty"
                }
              ]
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.IBackupPlan": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "experimental",
        "summary": "A backup plan."
      },
      "fqn": "@aws-cdk/aws-backup.IBackupPlan",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/plan.ts",
        "line": 11
      },
      "name": "IBackupPlan",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The identifier of the backup plan."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/plan.ts",
            "line": 17
          },
          "name": "backupPlanId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.IBackupVault": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "experimental",
        "summary": "A backup vault."
      },
      "fqn": "@aws-cdk/aws-backup.IBackupVault",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/vault.ts",
        "line": 11
      },
      "name": "IBackupVault",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "true"
            },
            "stability": "experimental",
            "summary": "The name of a logical container where backups are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/vault.ts",
            "line": 17
          },
          "name": "backupVaultName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.TagCondition": {
      "assembly": "@aws-cdk/aws-backup",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "A tag condition."
      },
      "fqn": "@aws-cdk/aws-backup.TagCondition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 30
      },
      "name": "TagCondition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, in `\"ec2:ResourceTag/Department\": \"accounting\"`,\n`ec2:ResourceTag/Department` is the key.",
            "stability": "experimental",
            "summary": "The key in a key-value pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 37
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, in `\"ec2:ResourceTag/Department\": \"accounting\"`,\n`accounting` is the value.",
            "stability": "experimental",
            "summary": "The value in a key-value pair."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 53
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "STRING_EQUALS",
            "stability": "experimental",
            "summary": "An operation that is applied to a key-value pair used to filter resources in a selection."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/resource.ts",
            "line": 45
          },
          "name": "operation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-backup.TagOperation"
          }
        }
      ]
    },
    "@aws-cdk/aws-backup.TagOperation": {
      "assembly": "@aws-cdk/aws-backup",
      "docs": {
        "stability": "experimental",
        "summary": "An operation that is applied to a key-value pair."
      },
      "fqn": "@aws-cdk/aws-backup.TagOperation",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/resource.ts",
        "line": 15
      },
      "members": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "StringEquals."
          },
          "name": "STRING_EQUALS"
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Dummy member."
          },
          "name": "DUMMY"
        }
      ],
      "name": "TagOperation"
    }
  },
  "version": "1.94.1",
  "fingerprint": "jgFzxKyArScPp5w10c+g1ZcUrbW6w5zGXDQLjZs1dHc="
}
