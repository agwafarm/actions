{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-ec2": "1.94.1",
    "@aws-cdk/aws-efs": "1.94.1",
    "@aws-cdk/aws-kms": "1.94.1",
    "@aws-cdk/aws-secretsmanager": "1.94.1",
    "@aws-cdk/core": "1.94.1",
    "constructs": "^3.2.0"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "The CDK Construct Library for AWS::DocDB",
  "docs": {
    "stability": "experimental"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.24.0 (build b722f66)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "AWS::DocDB",
    "aws-docdb"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "pacmak": {
        "hasDefaultInterfaces": true
      }
    }
  },
  "name": "@aws-cdk/aws-docdb",
  "readme": {
    "markdown": "# Amazon DocumentDB Construct Library\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cfn-resources: Stable](https://img.shields.io/badge/cfn--resources-stable-success.svg?style=for-the-badge)\n\n> All classes with the `Cfn` prefix in this module ([CFN Resources]) are always stable and safe to use.\n>\n> [CFN Resources]: https://docs.aws.amazon.com/cdk/latest/guide/constructs.html#constructs_lib\n\n![cdk-constructs: Experimental](https://img.shields.io/badge/cdk--constructs-experimental-important.svg?style=for-the-badge)\n\n> The APIs of higher level constructs in this module are experimental and under active development.\n> They are subject to non-backward compatible changes or removal in any future version. These are\n> not subject to the [Semantic Versioning](https://semver.org/) model and breaking changes will be\n> announced in the release notes. This means that while you may use them, you may need to update\n> your source code when upgrading to a newer version of this package.\n\n---\n\n<!--END STABILITY BANNER-->\n\n## Starting a Clustered Database\n\nTo set up a clustered DocumentDB database, define a `DatabaseCluster`. You must\nalways launch a database in a VPC. Use the `vpcSubnets` attribute to control whether\nyour instances will be launched privately or publicly:\n\n```ts\nconst cluster = new DatabaseCluster(this, 'Database', {\n    masterUser: {\n        username: 'myuser' // NOTE: 'admin' is reserved by DocumentDB\n    },\n    instanceProps: {\n        instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n        vpcSubnets: {\n            subnetType: ec2.SubnetType.PUBLIC,\n        },\n        vpc\n    }\n});\n```\n\nBy default, the master password will be generated and stored in AWS Secrets Manager with auto-generated description.\n\nYour cluster will be empty by default.\n\n## Connecting\n\nTo control who can access the cluster, use the `.connections` attribute. DocumentDB databases have a default port, so\nyou don't need to specify the port:\n\n```ts\ncluster.connections.allowDefaultPortFromAnyIpv4('Open to the world');\n```\n\nThe endpoints to access your database cluster will be available as the `.clusterEndpoint` and `.clusterReadEndpoint`\nattributes:\n\n```ts\nconst writeAddress = cluster.clusterEndpoint.socketAddress;   // \"HOSTNAME:PORT\"\n```\n\n## Rotating credentials\n\nWhen the master password is generated and stored in AWS Secrets Manager, it can be rotated automatically:\n\n```ts\ncluster.addRotationSingleUser(); // Will rotate automatically after 30 days\n```\n\n```ts lit=test/integ.cluster-rotation.lit.ts\nconst cluster = new docdb.DatabaseCluster(stack, 'Database', {\n  masterUser: {\n    username: 'docdb',\n  },\n  instanceProps: {\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.R5, ec2.InstanceSize.LARGE),\n    vpc,\n  },\n  removalPolicy: cdk.RemovalPolicy.DESTROY,\n});\n\ncluster.addRotationSingleUser();\n```\n\nThe multi user rotation scheme is also available:\n\n```ts\ncluster.addRotationMultiUser('MyUser', {\n  secret: myImportedSecret // This secret must have the `masterarn` key\n});\n```\n\nIt's also possible to create user credentials together with the cluster and add rotation:\n\n```ts\nconst myUserSecret = new docdb.DatabaseSecret(this, 'MyUserSecret', {\n  username: 'myuser',\n  masterSecret: cluster.secret\n});\nconst myUserSecretAttached = myUserSecret.attach(cluster); // Adds DB connections information in the secret\n\ncluster.addRotationMultiUser('MyUser', { // Add rotation using the multi user scheme\n  secret: myUserSecretAttached // This secret must have the `masterarn` key\n});\n```\n\n**Note**: This user must be created manually in the database using the master credentials.\nThe rotation will start as soon as this user exists.\n\nSee also [@aws-cdk/aws-secretsmanager](https://github.com/aws/aws-cdk/blob/master/packages/%40aws-cdk/aws-secretsmanager/README.md) for credentials rotation of existing clusters.\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-docdb",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.DocDB",
      "packageId": "Amazon.CDK.AWS.DocDB"
    },
    "java": {
      "maven": {
        "artifactId": "docdb",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.docdb"
    },
    "js": {
      "npm": "@aws-cdk/aws-docdb"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-docdb",
      "module": "aws_cdk.aws_docdb"
    }
  },
  "types": {
    "@aws-cdk/aws-docdb.BackupProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "default": "- The retention period for automated backups is 1 day.\nThe preferred backup window will be a 30-minute window selected at random\nfrom an 8-hour block of time for each AWS Region.",
        "see": "https://docs.aws.amazon.com/documentdb/latest/developerguide/backup-restore.db-cluster-snapshots.html#backup-restore.backup-window",
        "stability": "experimental",
        "summary": "Backup configuration for DocumentDB databases."
      },
      "fqn": "@aws-cdk/aws-docdb.BackupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/props.ts",
        "line": 15
      },
      "name": "BackupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "How many days to retain the backup."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 20
          },
          "name": "retention",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a 30-minute window selected at random from an 8-hour block of\ntime for each AWS Region. To see the time blocks available, see\nhttps://docs.aws.amazon.com/documentdb/latest/developerguide/backup-restore.db-cluster-snapshots.html#backup-restore.backup-window",
            "remarks": "Must be at least 30 minutes long.\n\nExample: '01:00-02:00'",
            "stability": "experimental",
            "summary": "A daily time range in 24-hours UTC format in which backups preferably execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 33
          },
          "name": "preferredWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.CfnDBCluster": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::DocDB::DBCluster",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::DocDB::DBCluster`."
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBCluster",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::DocDB::DBCluster`."
        },
        "locationInModule": {
          "filename": "lib/docdb.generated.ts",
          "line": 390
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.CfnDBClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 230
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 431
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 459
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDBCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 234
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ClusterResourceId"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 258
          },
          "name": "attrClusterResourceId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Endpoint"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 263
          },
          "name": "attrEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Port"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 268
          },
          "name": "attrPort",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "ReadEndpoint"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 273
          },
          "name": "attrReadEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 436
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-tags"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 375
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masterusername"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.MasterUsername`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 279
          },
          "name": "masterUsername",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masteruserpassword"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.MasterUserPassword`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 285
          },
          "name": "masterUserPassword",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-availabilityzones"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.AvailabilityZones`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 291
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-backupretentionperiod"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.BackupRetentionPeriod`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 297
          },
          "name": "backupRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusteridentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.DBClusterIdentifier`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 303
          },
          "name": "dbClusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusterparametergroupname"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.DBClusterParameterGroupName`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 309
          },
          "name": "dbClusterParameterGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbsubnetgroupname"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.DBSubnetGroupName`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 315
          },
          "name": "dbSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-deletionprotection"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.DeletionProtection`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 321
          },
          "name": "deletionProtection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-enablecloudwatchlogsexports"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.EnableCloudwatchLogsExports`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 327
          },
          "name": "enableCloudwatchLogsExports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-engineversion"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.EngineVersion`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 333
          },
          "name": "engineVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-kmskeyid"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.KmsKeyId`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 339
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-port"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.Port`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 345
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredbackupwindow"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.PreferredBackupWindow`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 351
          },
          "name": "preferredBackupWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredmaintenancewindow"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.PreferredMaintenanceWindow`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 357
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-snapshotidentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.SnapshotIdentifier`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 363
          },
          "name": "snapshotIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-storageencrypted"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.StorageEncrypted`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 369
          },
          "name": "storageEncrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-vpcsecuritygroupids"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.VpcSecurityGroupIds`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 381
          },
          "name": "vpcSecurityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.CfnDBClusterParameterGroup": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::DocDB::DBClusterParameterGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::DocDB::DBClusterParameterGroup`."
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBClusterParameterGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::DocDB::DBClusterParameterGroup`."
        },
        "locationInModule": {
          "filename": "lib/docdb.generated.ts",
          "line": 629
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.CfnDBClusterParameterGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 567
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 649
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 664
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDBClusterParameterGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 571
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 654
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-tags"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 620
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-description"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Description`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 596
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-family"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Family`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 602
          },
          "name": "family",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-parameters"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Parameters`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 608
          },
          "name": "parameters",
          "type": {
            "primitive": "any"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-name"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Name`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 614
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.CfnDBClusterParameterGroupProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::DocDB::DBClusterParameterGroup`."
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBClusterParameterGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 470
      },
      "name": "CfnDBClusterParameterGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-description"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Description`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 476
          },
          "name": "description",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-family"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Family`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 482
          },
          "name": "family",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-parameters"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Parameters`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 488
          },
          "name": "parameters",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-name"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Name`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 494
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbclusterparametergroup.html#cfn-docdb-dbclusterparametergroup-tags"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBClusterParameterGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 500
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.CfnDBClusterProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::DocDB::DBCluster`."
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 17
      },
      "name": "CfnDBClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masterusername"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.MasterUsername`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 23
          },
          "name": "masterUsername",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-masteruserpassword"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.MasterUserPassword`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 29
          },
          "name": "masterUserPassword",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-availabilityzones"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.AvailabilityZones`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 35
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-backupretentionperiod"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.BackupRetentionPeriod`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 41
          },
          "name": "backupRetentionPeriod",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusteridentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.DBClusterIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 47
          },
          "name": "dbClusterIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbclusterparametergroupname"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.DBClusterParameterGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 53
          },
          "name": "dbClusterParameterGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-dbsubnetgroupname"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.DBSubnetGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 59
          },
          "name": "dbSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-deletionprotection"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.DeletionProtection`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 65
          },
          "name": "deletionProtection",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-enablecloudwatchlogsexports"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.EnableCloudwatchLogsExports`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 71
          },
          "name": "enableCloudwatchLogsExports",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-engineversion"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.EngineVersion`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 77
          },
          "name": "engineVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-kmskeyid"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.KmsKeyId`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 83
          },
          "name": "kmsKeyId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-port"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.Port`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 89
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredbackupwindow"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.PreferredBackupWindow`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 95
          },
          "name": "preferredBackupWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-preferredmaintenancewindow"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.PreferredMaintenanceWindow`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 101
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-snapshotidentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.SnapshotIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 107
          },
          "name": "snapshotIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-storageencrypted"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.StorageEncrypted`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 113
          },
          "name": "storageEncrypted",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-tags"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 119
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbcluster.html#cfn-docdb-dbcluster-vpcsecuritygroupids"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBCluster.VpcSecurityGroupIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 125
          },
          "name": "vpcSecurityGroupIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.CfnDBInstance": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::DocDB::DBInstance",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::DocDB::DBInstance`."
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBInstance",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::DocDB::DBInstance`."
        },
        "locationInModule": {
          "filename": "lib/docdb.generated.ts",
          "line": 873
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.CfnDBInstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 789
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 901
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 918
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDBInstance",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 793
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Endpoint"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 817
          },
          "name": "attrEndpoint",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "cloudformationAttribute": "Port"
            },
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 822
          },
          "name": "attrPort",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 906
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-tags"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 864
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbclusteridentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.DBClusterIdentifier`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 828
          },
          "name": "dbClusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceclass"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.DBInstanceClass`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 834
          },
          "name": "dbInstanceClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-autominorversionupgrade"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.AutoMinorVersionUpgrade`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 840
          },
          "name": "autoMinorVersionUpgrade",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.AvailabilityZone`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 846
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceidentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.DBInstanceIdentifier`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 852
          },
          "name": "dbInstanceIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-preferredmaintenancewindow"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.PreferredMaintenanceWindow`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 858
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.CfnDBInstanceProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::DocDB::DBInstance`."
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 675
      },
      "name": "CfnDBInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbclusteridentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.DBClusterIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 681
          },
          "name": "dbClusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceclass"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.DBInstanceClass`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 687
          },
          "name": "dbInstanceClass",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-autominorversionupgrade"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.AutoMinorVersionUpgrade`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 693
          },
          "name": "autoMinorVersionUpgrade",
          "optional": true,
          "type": {
            "union": {
              "types": [
                {
                  "primitive": "boolean"
                },
                {
                  "fqn": "@aws-cdk/core.IResolvable"
                }
              ]
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-availabilityzone"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.AvailabilityZone`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 699
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-dbinstanceidentifier"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.DBInstanceIdentifier`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 705
          },
          "name": "dbInstanceIdentifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-preferredmaintenancewindow"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.PreferredMaintenanceWindow`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 711
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbinstance.html#cfn-docdb-dbinstance-tags"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBInstance.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 717
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.CfnDBSubnetGroup": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.CfnResource",
      "docs": {
        "custom": {
          "cloudformationResource": "AWS::DocDB::DBSubnetGroup",
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html"
        },
        "stability": "external",
        "summary": "A CloudFormation `AWS::DocDB::DBSubnetGroup`."
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBSubnetGroup",
      "initializer": {
        "docs": {
          "stability": "external",
          "summary": "Create a new `AWS::DocDB::DBSubnetGroup`."
        },
        "locationInModule": {
          "filename": "lib/docdb.generated.ts",
          "line": 1072
        },
        "parameters": [
          {
            "docs": {
              "summary": "- scope in which this resource is defined."
            },
            "name": "scope",
            "type": {
              "fqn": "@aws-cdk/core.Construct"
            }
          },
          {
            "docs": {
              "summary": "- scoped id of the resource."
            },
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- resource properties."
            },
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.CfnDBSubnetGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/core.IInspectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 1016
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Examines the CloudFormation resource and discloses attributes."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1090
          },
          "name": "inspect",
          "overrides": "@aws-cdk/core.IInspectable",
          "parameters": [
            {
              "docs": {
                "summary": "- tree inspector to collect and process attributes."
              },
              "name": "inspector",
              "type": {
                "fqn": "@aws-cdk/core.TreeInspector"
              }
            }
          ]
        },
        {
          "docs": {
            "stability": "external"
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1104
          },
          "name": "renderProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "parameters": [
            {
              "name": "props",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "any"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "primitive": "any"
                },
                "kind": "map"
              }
            }
          }
        }
      ],
      "name": "CfnDBSubnetGroup",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "external",
            "summary": "The CloudFormation resource type name for this resource class."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1020
          },
          "name": "CFN_RESOURCE_TYPE_NAME",
          "static": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "external"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1095
          },
          "name": "cfnProperties",
          "overrides": "@aws-cdk/core.CfnResource",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-tags"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBSubnetGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1063
          },
          "name": "tags",
          "type": {
            "fqn": "@aws-cdk/core.TagManager"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupdescription"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBSubnetGroup.DBSubnetGroupDescription`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1045
          },
          "name": "dbSubnetGroupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-subnetids"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBSubnetGroup.SubnetIds`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1051
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupname"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBSubnetGroup.DBSubnetGroupName`."
          },
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 1057
          },
          "name": "dbSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.CfnDBSubnetGroupProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "custom": {
          "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html"
        },
        "stability": "external",
        "summary": "Properties for defining a `AWS::DocDB::DBSubnetGroup`."
      },
      "fqn": "@aws-cdk/aws-docdb.CfnDBSubnetGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/docdb.generated.ts",
        "line": 929
      },
      "name": "CfnDBSubnetGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupdescription"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBSubnetGroup.DBSubnetGroupDescription`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 935
          },
          "name": "dbSubnetGroupDescription",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-subnetids"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBSubnetGroup.SubnetIds`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 941
          },
          "name": "subnetIds",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-dbsubnetgroupname"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBSubnetGroup.DBSubnetGroupName`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 947
          },
          "name": "dbSubnetGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "link": "http://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-docdb-dbsubnetgroup.html#cfn-docdb-dbsubnetgroup-tags"
            },
            "stability": "external",
            "summary": "`AWS::DocDB::DBSubnetGroup.Tags`."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/docdb.generated.ts",
            "line": 953
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/core.CfnTag"
              },
              "kind": "array"
            }
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.ClusterParameterGroup": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::DocDB::DBClusterParameterGroup"
        },
        "stability": "experimental",
        "summary": "A cluster parameter group."
      },
      "fqn": "@aws-cdk/aws-docdb.ClusterParameterGroup",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/parameter-group.ts",
          "line": 75
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.ClusterParameterGroupProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-docdb.IClusterParameterGroup"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/parameter-group.ts",
        "line": 69
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Imports a parameter group."
          },
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 22
          },
          "name": "fromParameterGroupName",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "parameterGroupName",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-docdb.IClusterParameterGroup"
            }
          },
          "static": true
        }
      ],
      "name": "ClusterParameterGroup",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The name of the parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 73
          },
          "name": "parameterGroupName",
          "overrides": "@aws-cdk/aws-docdb.IClusterParameterGroup",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.ClusterParameterGroupProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a cluster parameter group."
      },
      "fqn": "@aws-cdk/aws-docdb.ClusterParameterGroupProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/parameter-group.ts",
        "line": 38
      },
      "name": "ClusterParameterGroupProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Database family of this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 49
          },
          "name": "family",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The parameters in this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 61
          },
          "name": "parameters",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A CDK generated name for the cluster parameter group",
            "stability": "experimental",
            "summary": "The name of the cluster parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 56
          },
          "name": "dbClusterParameterGroupName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a CDK generated description",
            "stability": "experimental",
            "summary": "Description for this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 44
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.DatabaseCluster": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::DocDB::DBCluster"
        },
        "stability": "experimental",
        "summary": "Create a clustered database with a given number of instances."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseCluster",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/cluster.ts",
          "line": 275
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.DatabaseClusterProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-docdb.IDatabaseCluster"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 174
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing DatabaseCluster from properties."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 190
          },
          "name": "fromDatabaseClusterAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-docdb.DatabaseClusterAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-docdb.IDatabaseCluster"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds the multi user rotation to this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 435
          },
          "name": "addRotationMultiUser",
          "parameters": [
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "options",
              "type": {
                "fqn": "@aws-cdk/aws-docdb.RotationMultiUserOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotation"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Adds the single user rotation of the master password to this cluster."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 411
          },
          "name": "addRotationSingleUser",
          "parameters": [
            {
              "docs": {
                "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
              },
              "name": "automaticallyAfter",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/core.Duration"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretRotation"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Renders the secret attachment target specifications."
          },
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 161
          },
          "name": "asSecretAttachmentTarget",
          "overrides": "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget",
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-secretsmanager.SecretAttachmentTargetProps"
            }
          }
        }
      ],
      "name": "DatabaseCluster",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The default number of instances in the DocDB cluster if none are specified."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 180
          },
          "name": "DEFAULT_NUM_INSTANCES",
          "static": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "experimental",
            "summary": "The default port Document DB listens on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 185
          },
          "name": "DEFAULT_PORT",
          "static": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The endpoint to use for read/write operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 226
          },
          "name": "clusterEndpoint",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Identifier of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 221
          },
          "name": "clusterIdentifier",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Endpoint to use for load-balanced read-only operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 231
          },
          "name": "clusterReadEndpoint",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "docs": {
            "custom": {
              "attribute": "ClusterResourceId"
            },
            "remarks": "for example: cluster-ABCD1234EFGH5678IJKL90MNOP. The cluster ID uniquely\nidentifies the cluster and is used in things like IAM authentication policies.",
            "stability": "experimental",
            "summary": "The resource id for the cluster;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 238
          },
          "name": "clusterResourceIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The connections object to implement IConnectable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 243
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Endpoints which address each individual replica."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 253
          },
          "name": "instanceEndpoints",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-docdb.Endpoint"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Identifiers of the replicas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 248
          },
          "name": "instanceIdentifiers",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "Security group identifier of this database."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 258
          },
          "name": "securityGroupId",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseCluster",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The secret attached to this cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 263
          },
          "name": "secret",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.DatabaseClusterAttributes": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties that describe an existing cluster instance."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseClusterAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster-ref.ts",
        "line": 46
      },
      "name": "DatabaseClusterAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Cluster endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 71
          },
          "name": "clusterEndpointAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Identifier for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 60
          },
          "name": "clusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Endpoint addresses of individual instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 81
          },
          "name": "instanceEndpointAddresses",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Identifier for the instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 65
          },
          "name": "instanceIdentifiers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The database port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 50
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Reader endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 76
          },
          "name": "readerEndpointAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The security group of the database cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 55
          },
          "name": "securityGroup",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.DatabaseClusterProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties for a new database cluster."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseClusterProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster.ts",
        "line": 16
      },
      "name": "DatabaseClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Settings for the individual instances that are launched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 87
          },
          "name": "instanceProps",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.InstanceProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Username and password for the administrative user."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 34
          },
          "name": "masterUser",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Login"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Backup retention period for automated backups is 1 day.\nBackup preferred window is set to a 30-minute window selected at random from an\n8-hour block of time for each AWS Region, occurring on a random day of the week.",
            "see": "https://docs.aws.amazon.com/documentdb/latest/developerguide/backup-restore.db-cluster-snapshots.html#backup-restore.backup-window",
            "stability": "experimental",
            "summary": "Backup settings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 44
          },
          "name": "backup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-docdb.BackupProps"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A name is automatically generated.",
            "stability": "experimental",
            "summary": "An optional identifier for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 72
          },
          "name": "dbClusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default engine version.",
            "stability": "experimental",
            "summary": "What version of the database to start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 22
          },
          "name": "engineVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- `dbClusterName` is used with the word \"Instance\" appended. If `dbClusterName` is not provided, the\nidentifier is automatically generated.",
            "remarks": "Every replica is named by appending the replica number to this string, 1-based.",
            "stability": "experimental",
            "summary": "Base identifier for instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 82
          },
          "name": "instanceIdentifierBase",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "experimental",
            "summary": "Number of DocDB compute instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 65
          },
          "name": "instances",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default master key.",
            "stability": "experimental",
            "summary": "The KMS key for storage encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 51
          },
          "name": "kmsKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No parameter group.",
            "stability": "experimental",
            "summary": "Additional parameters to pass to the database engine."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 107
          },
          "name": "parameterGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-docdb.IClusterParameterGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DatabaseCluster.DEFAULT_PORT",
            "stability": "experimental",
            "summary": "The port the DocumentDB cluster will listen on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 29
          },
          "name": "port",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 30-minute window selected at random from an 8-hour block of time for\neach AWS Region, occurring on a random day of the week.",
            "remarks": "Must be at least 30 minutes long.\n\nExample: 'tue:04:17-tue:04:47'",
            "see": "https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-maintain.html#maintenance-window",
            "stability": "experimental",
            "summary": "A weekly time range in which maintenance should preferably execute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 100
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Retain cluster.",
            "remarks": "This\nremoval policy also applies to the implicit security group created for the\ncluster if one is not supplied as a parameter.",
            "stability": "experimental",
            "summary": "The removal policy to apply when the cluster and its instances are removed or replaced during a stack update, or when the stack is deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 117
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Whether to enable storage encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster.ts",
            "line": 58
          },
          "name": "storageEncrypted",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.DatabaseInstance": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/core.Resource",
      "docs": {
        "custom": {
          "resource": "AWS::DocDB::DBInstance"
        },
        "stability": "experimental",
        "summary": "A database instance."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseInstance",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/instance.ts",
          "line": 200
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.DatabaseInstanceProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-docdb.IDatabaseInstance"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 174
      },
      "methods": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "Import an existing database instance."
          },
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 69
          },
          "name": "fromDatabaseInstanceAttributes",
          "parameters": [
            {
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "name": "attrs",
              "type": {
                "fqn": "@aws-cdk/aws-docdb.DatabaseInstanceAttributes"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-docdb.IDatabaseInstance"
            }
          },
          "static": true
        }
      ],
      "name": "DatabaseInstance",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The instance's database cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 178
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.IDatabaseCluster"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "experimental",
            "summary": "The instance endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 188
          },
          "name": "dbInstanceEndpointAddress",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "experimental",
            "summary": "The instance endpoint port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 193
          },
          "name": "dbInstanceEndpointPort",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The instance arn."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 101
          },
          "name": "instanceArn",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "experimental",
            "summary": "The instance endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 198
          },
          "name": "instanceEndpoint",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "docs": {
            "custom": {
              "inheritdoc": "true"
            },
            "stability": "experimental",
            "summary": "The instance identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 183
          },
          "name": "instanceIdentifier",
          "overrides": "@aws-cdk/aws-docdb.IDatabaseInstance",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.DatabaseInstanceAttributes": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Properties that describe an existing instance."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseInstanceAttributes",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 45
      },
      "name": "DatabaseInstanceAttributes",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 54
          },
          "name": "instanceEndpointAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The instance identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 49
          },
          "name": "instanceIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The database port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 59
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.DatabaseInstanceProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for a DatabaseInstanceNew."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseInstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 114
      },
      "name": "DatabaseInstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The DocumentDB database cluster the instance should launch into."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 118
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.IDatabaseCluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of the compute and memory capacity classes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 123
          },
          "name": "instanceClass",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "experimental",
            "summary": "Indicates that minor engine upgrades are applied automatically to the DB instance during the maintenance window."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 146
          },
          "name": "autoMinorVersionUpgrade",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no preference",
            "stability": "experimental",
            "summary": "The name of the Availability Zone where the DB instance will be located."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 130
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a CloudFormation generated name",
            "remarks": "If you specify a name, AWS CloudFormation\nconverts it to lowercase.",
            "stability": "experimental",
            "summary": "A name for the DB instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 138
          },
          "name": "dbInstanceName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a 30-minute window selected at random from an 8-hour block of\ntime for each AWS Region, occurring on a random day of the week. To see\nthe time blocks available, see https://docs.aws.amazon.com/documentdb/latest/developerguide/db-instance-maintain.html#maintenance-window",
            "remarks": "Format: `ddd:hh24:mi-ddd:hh24:mi`\nConstraint: Minimum 30-minute window",
            "stability": "experimental",
            "summary": "The weekly time range (in UTC) during which system maintenance can occur."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 158
          },
          "name": "preferredMaintenanceWindow",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RemovalPolicy.Retain",
            "stability": "experimental",
            "summary": "The CloudFormation policy to apply when the instance is removed from the stack or replaced during an update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 166
          },
          "name": "removalPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.RemovalPolicy"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.DatabaseSecret": {
      "assembly": "@aws-cdk/aws-docdb",
      "base": "@aws-cdk/aws-secretsmanager.Secret",
      "docs": {
        "custom": {
          "resource": "AWS::SecretsManager::Secret"
        },
        "stability": "experimental",
        "summary": "A database secret."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseSecret",
      "initializer": {
        "docs": {
          "stability": "experimental"
        },
        "locationInModule": {
          "filename": "lib/database-secret.ts",
          "line": 44
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-docdb.DatabaseSecretProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/database-secret.ts",
        "line": 43
      },
      "name": "DatabaseSecret"
    },
    "@aws-cdk/aws-docdb.DatabaseSecretProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Construction properties for a DatabaseSecret."
      },
      "fqn": "@aws-cdk/aws-docdb.DatabaseSecretProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/database-secret.ts",
        "line": 9
      },
      "name": "DatabaseSecretProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 13
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "default master key",
            "stability": "experimental",
            "summary": "The KMS key to use to encrypt the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 20
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no master secret information will be included",
            "stability": "experimental",
            "summary": "The master secret which will be used to rotate this secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 34
          },
          "name": "masterSecret",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Secretsmanager will generate a physical name for the secret",
            "stability": "experimental",
            "summary": "The physical name of the secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/database-secret.ts",
            "line": 27
          },
          "name": "secretName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.Endpoint": {
      "assembly": "@aws-cdk/aws-docdb",
      "docs": {
        "remarks": "Consists of a combination of hostname and port.",
        "stability": "experimental",
        "summary": "Connection endpoint of a database cluster or instance."
      },
      "fqn": "@aws-cdk/aws-docdb.Endpoint",
      "initializer": {
        "docs": {
          "stability": "experimental",
          "summary": "Constructs an Endpoint instance."
        },
        "locationInModule": {
          "filename": "lib/endpoint.ts",
          "line": 53
        },
        "parameters": [
          {
            "docs": {
              "summary": "- The hostname or address of the endpoint."
            },
            "name": "address",
            "type": {
              "primitive": "string"
            }
          },
          {
            "docs": {
              "summary": "- The port number of the endpoint."
            },
            "name": "port",
            "type": {
              "primitive": "number"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/endpoint.ts",
        "line": 8
      },
      "methods": [
        {
          "docs": {
            "remarks": "This is intended to deal with CDK's token system. Numeric CDK tokens are not expanded when their string\nrepresentation is embedded in a string. This function returns the port either as an unresolved string token or\nas a resolved string representation of the port value.",
            "returns": "An (un)resolved string representation of the endpoint's port number",
            "stability": "experimental",
            "summary": "Returns the port number as a string representation that can be used for embedding within other strings."
          },
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 74
          },
          "name": "portAsString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "Endpoint",
      "properties": [
        {
          "docs": {
            "stability": "experimental",
            "summary": "The hostname of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 32
          },
          "name": "hostname",
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "remarks": "This can potentially be a CDK token. If you need to embed the port in a string (e.g. instance user data script),\nuse {@link Endpoint.portAsString}.",
            "stability": "experimental",
            "summary": "The port number of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 40
          },
          "name": "port",
          "type": {
            "primitive": "number"
          }
        },
        {
          "docs": {
            "stability": "experimental",
            "summary": "The combination of ``HOSTNAME:PORT`` for this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/endpoint.ts",
            "line": 45
          },
          "name": "socketAddress",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.IClusterParameterGroup": {
      "assembly": "@aws-cdk/aws-docdb",
      "docs": {
        "stability": "experimental",
        "summary": "A parameter group."
      },
      "fqn": "@aws-cdk/aws-docdb.IClusterParameterGroup",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/parameter-group.ts",
        "line": 8
      },
      "name": "IClusterParameterGroup",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The name of this parameter group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/parameter-group.ts",
            "line": 12
          },
          "name": "parameterGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.IDatabaseCluster": {
      "assembly": "@aws-cdk/aws-docdb",
      "docs": {
        "stability": "experimental",
        "summary": "Create a clustered database with a given number of instances."
      },
      "fqn": "@aws-cdk/aws-docdb.IDatabaseCluster",
      "interfaces": [
        "@aws-cdk/core.IResource",
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-secretsmanager.ISecretAttachmentTarget"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/cluster-ref.ts",
        "line": 9
      },
      "name": "IDatabaseCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "Endpoint,Port"
            },
            "stability": "experimental",
            "summary": "The endpoint to use for read/write operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 24
          },
          "name": "clusterEndpoint",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Identifier of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 13
          },
          "name": "clusterIdentifier",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "ReadEndpoint"
            },
            "stability": "experimental",
            "summary": "Endpoint to use for load-balanced read-only operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 30
          },
          "name": "clusterReadEndpoint",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Endpoints which address each individual replica."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 35
          },
          "name": "instanceEndpoints",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-docdb.Endpoint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Identifiers of the replicas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 18
          },
          "name": "instanceIdentifiers",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The security group for this database cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/cluster-ref.ts",
            "line": 40
          },
          "name": "securityGroupId",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.IDatabaseInstance": {
      "assembly": "@aws-cdk/aws-docdb",
      "docs": {
        "stability": "experimental",
        "summary": "A database instance."
      },
      "fqn": "@aws-cdk/aws-docdb.IDatabaseInstance",
      "interfaces": [
        "@aws-cdk/core.IResource"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/instance.ts",
        "line": 11
      },
      "name": "IDatabaseInstance",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "Endpoint"
            },
            "stability": "experimental",
            "summary": "The instance endpoint address."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 27
          },
          "name": "dbInstanceEndpointAddress",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "attribute": "Port"
            },
            "stability": "experimental",
            "summary": "The instance endpoint port."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 34
          },
          "name": "dbInstanceEndpointPort",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The instance arn."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 20
          },
          "name": "instanceArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The instance endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 39
          },
          "name": "instanceEndpoint",
          "type": {
            "fqn": "@aws-cdk/aws-docdb.Endpoint"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "The instance identifier."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/instance.ts",
            "line": 15
          },
          "name": "instanceIdentifier",
          "type": {
            "primitive": "string"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.InstanceProps": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Instance properties for database instances."
      },
      "fqn": "@aws-cdk/aws-docdb.InstanceProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/props.ts",
        "line": 63
      },
      "name": "InstanceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "What type of instance to start for the replicas."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 67
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Must be at least 2 subnets in two different AZs.",
            "stability": "experimental",
            "summary": "What subnets to run the DocumentDB instances in."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 74
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "no parameter group",
            "stability": "experimental",
            "summary": "The DB parameter group to associate with the instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 95
          },
          "name": "parameterGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-docdb.IClusterParameterGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a new security group is created.",
            "stability": "experimental",
            "summary": "Security group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 88
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "private subnets",
            "stability": "experimental",
            "summary": "Where to place the instances within the VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 81
          },
          "name": "vpcSubnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.Login": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Login credentials for a database cluster."
      },
      "fqn": "@aws-cdk/aws-docdb.Login",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/props.ts",
        "line": 39
      },
      "name": "Login",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "experimental",
            "summary": "Username."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 43
          },
          "name": "username",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "default master key",
            "stability": "experimental",
            "summary": "KMS encryption key to encrypt the generated secret."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 57
          },
          "name": "kmsKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "a Secrets Manager generated password",
            "remarks": "Do not put passwords in your CDK code directly.",
            "stability": "experimental",
            "summary": "Password."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 51
          },
          "name": "password",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.SecretValue"
          }
        }
      ]
    },
    "@aws-cdk/aws-docdb.RotationMultiUserOptions": {
      "assembly": "@aws-cdk/aws-docdb",
      "datatype": true,
      "docs": {
        "stability": "experimental",
        "summary": "Options to add the multi user rotation."
      },
      "fqn": "@aws-cdk/aws-docdb.RotationMultiUserOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/props.ts",
        "line": 101
      },
      "name": "RotationMultiUserOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "It must be a JSON string with the following format:\n```\n{\n   \"engine\": <required: must be set to 'mongo'>,\n   \"host\": <required: instance host name>,\n   \"username\": <required: username>,\n   \"password\": <required: password>,\n   \"dbname\": <optional: database name>,\n   \"port\": <optional: if not specified, default port 27017 will be used>,\n   \"masterarn\": <required: the arn of the master secret which will be used to create users/change passwords>\n   \"ssl\": <optional: if not specified, defaults to false. This must be true if being used for DocumentDB rotations\n          where the cluster has TLS enabled>\n}\n```",
            "stability": "experimental",
            "summary": "The secret to rotate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 118
          },
          "name": "secret",
          "type": {
            "fqn": "@aws-cdk/aws-secretsmanager.ISecret"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.days(30)",
            "stability": "experimental",
            "summary": "Specifies the number of days after the previous rotation before Secrets Manager triggers the next automatic rotation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/props.ts",
            "line": 126
          },
          "name": "automaticallyAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ]
    }
  },
  "version": "1.94.1",
  "fingerprint": "sA31tEfgy779ZtLASh8ZYxhfyzGNrq8AKryixdVeB0c="
}
