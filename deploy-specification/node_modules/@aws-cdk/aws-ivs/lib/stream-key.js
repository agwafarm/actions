"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamKey = void 0;
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const core = require("@aws-cdk/core");
const ivs_generated_1 = require("./ivs.generated");
/**
 * (experimental) A new IVS Stream Key.
 *
 * @experimental
 */
class StreamKey extends core.Resource {
    /**
     * @experimental
     */
    constructor(scope, id, props) {
        super(scope, id, {});
        const resource = new ivs_generated_1.CfnStreamKey(this, 'Resource', {
            channelArn: props.channel.channelArn,
        });
        this.streamKeyArn = resource.attrArn;
        this.streamKeyValue = resource.attrValue;
    }
}
exports.StreamKey = StreamKey;
_a = JSII_RTTI_SYMBOL_1;
StreamKey[_a] = { fqn: "@aws-cdk/aws-ivs.StreamKey", version: "1.94.1" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RyZWFtLWtleS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInN0cmVhbS1rZXkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxzQ0FBc0M7QUFHdEMsbURBQStDOzs7Ozs7QUEyQi9DLE1BQWEsU0FBVSxTQUFRLElBQUksQ0FBQyxRQUFROzs7O0lBVTFDLFlBQVksS0FBZ0IsRUFBRSxFQUFVLEVBQUUsS0FBcUI7UUFDN0QsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFFckIsTUFBTSxRQUFRLEdBQUcsSUFBSSw0QkFBWSxDQUFDLElBQUksRUFBRSxVQUFVLEVBQUU7WUFDbEQsVUFBVSxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsVUFBVTtTQUNyQyxDQUFDLENBQUM7UUFFSCxJQUFJLENBQUMsWUFBWSxHQUFHLFFBQVEsQ0FBQyxPQUFPLENBQUM7UUFDckMsSUFBSSxDQUFDLGNBQWMsR0FBRyxRQUFRLENBQUMsU0FBUyxDQUFDO0lBQzNDLENBQUM7O0FBbkJILDhCQW9CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNvcmUgZnJvbSAnQGF3cy1jZGsvY29yZSc7XG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdjb25zdHJ1Y3RzJztcbmltcG9ydCB7IElDaGFubmVsIH0gZnJvbSAnLi9jaGFubmVsJztcbmltcG9ydCB7IENmblN0cmVhbUtleSB9IGZyb20gJy4vaXZzLmdlbmVyYXRlZCc7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFxuZXhwb3J0IGludGVyZmFjZSBJU3RyZWFtS2V5IGV4dGVuZHMgY29yZS5JUmVzb3VyY2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHJlYWRvbmx5IHN0cmVhbUtleUFybjogc3RyaW5nO1xufVxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbmV4cG9ydCBpbnRlcmZhY2UgU3RyZWFtS2V5UHJvcHMge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcbiAgcmVhZG9ubHkgY2hhbm5lbDogSUNoYW5uZWw7XG59XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG5leHBvcnQgY2xhc3MgU3RyZWFtS2V5IGV4dGVuZHMgY29yZS5SZXNvdXJjZSBpbXBsZW1lbnRzIElTdHJlYW1LZXkge1xuICBwdWJsaWMgcmVhZG9ubHkgc3RyZWFtS2V5QXJuOiBzdHJpbmc7XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXG4gIHB1YmxpYyByZWFkb25seSBzdHJlYW1LZXlWYWx1ZTogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBTdHJlYW1LZXlQcm9wcykge1xuICAgIHN1cGVyKHNjb3BlLCBpZCwge30pO1xuXG4gICAgY29uc3QgcmVzb3VyY2UgPSBuZXcgQ2ZuU3RyZWFtS2V5KHRoaXMsICdSZXNvdXJjZScsIHtcbiAgICAgIGNoYW5uZWxBcm46IHByb3BzLmNoYW5uZWwuY2hhbm5lbEFybixcbiAgICB9KTtcblxuICAgIHRoaXMuc3RyZWFtS2V5QXJuID0gcmVzb3VyY2UuYXR0ckFybjtcbiAgICB0aGlzLnN0cmVhbUtleVZhbHVlID0gcmVzb3VyY2UuYXR0clZhbHVlO1xuICB9XG59Il19