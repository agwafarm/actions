"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  AccessDeniedException: () => AccessDeniedException,
  AssociateServiceRoleToAccountCommand: () => AssociateServiceRoleToAccountCommand,
  BatchAssociateClientDeviceWithCoreDeviceCommand: () => BatchAssociateClientDeviceWithCoreDeviceCommand,
  BatchDisassociateClientDeviceFromCoreDeviceCommand: () => BatchDisassociateClientDeviceFromCoreDeviceCommand,
  CancelDeploymentCommand: () => CancelDeploymentCommand,
  CloudComponentState: () => CloudComponentState,
  ComponentDependencyType: () => ComponentDependencyType,
  ComponentVisibilityScope: () => ComponentVisibilityScope,
  ConflictException: () => ConflictException,
  CoreDeviceStatus: () => CoreDeviceStatus,
  CreateComponentVersionCommand: () => CreateComponentVersionCommand,
  CreateDeploymentCommand: () => CreateDeploymentCommand,
  DeleteComponentCommand: () => DeleteComponentCommand,
  DeleteCoreDeviceCommand: () => DeleteCoreDeviceCommand,
  DeleteDeploymentCommand: () => DeleteDeploymentCommand,
  DeploymentComponentUpdatePolicyAction: () => DeploymentComponentUpdatePolicyAction,
  DeploymentFailureHandlingPolicy: () => DeploymentFailureHandlingPolicy,
  DeploymentHistoryFilter: () => DeploymentHistoryFilter,
  DeploymentStatus: () => DeploymentStatus,
  DescribeComponentCommand: () => DescribeComponentCommand,
  DisassociateServiceRoleFromAccountCommand: () => DisassociateServiceRoleFromAccountCommand,
  EffectiveDeploymentExecutionStatus: () => EffectiveDeploymentExecutionStatus,
  GetComponentCommand: () => GetComponentCommand,
  GetComponentVersionArtifactCommand: () => GetComponentVersionArtifactCommand,
  GetConnectivityInfoCommand: () => GetConnectivityInfoCommand,
  GetCoreDeviceCommand: () => GetCoreDeviceCommand,
  GetDeploymentCommand: () => GetDeploymentCommand,
  GetServiceRoleForAccountCommand: () => GetServiceRoleForAccountCommand,
  GreengrassV2: () => GreengrassV2,
  GreengrassV2Client: () => GreengrassV2Client,
  GreengrassV2ServiceException: () => GreengrassV2ServiceException,
  InstalledComponentLifecycleState: () => InstalledComponentLifecycleState,
  InstalledComponentTopologyFilter: () => InstalledComponentTopologyFilter,
  InternalServerException: () => InternalServerException,
  IoTJobAbortAction: () => IoTJobAbortAction,
  IoTJobExecutionFailureType: () => IoTJobExecutionFailureType,
  IotEndpointType: () => IotEndpointType,
  LambdaEventSourceType: () => LambdaEventSourceType,
  LambdaFilesystemPermission: () => LambdaFilesystemPermission,
  LambdaInputPayloadEncodingType: () => LambdaInputPayloadEncodingType,
  LambdaIsolationMode: () => LambdaIsolationMode,
  ListClientDevicesAssociatedWithCoreDeviceCommand: () => ListClientDevicesAssociatedWithCoreDeviceCommand,
  ListComponentVersionsCommand: () => ListComponentVersionsCommand,
  ListComponentsCommand: () => ListComponentsCommand,
  ListCoreDevicesCommand: () => ListCoreDevicesCommand,
  ListDeploymentsCommand: () => ListDeploymentsCommand,
  ListEffectiveDeploymentsCommand: () => ListEffectiveDeploymentsCommand,
  ListInstalledComponentsCommand: () => ListInstalledComponentsCommand,
  ListTagsForResourceCommand: () => ListTagsForResourceCommand,
  RecipeOutputFormat: () => RecipeOutputFormat,
  RequestAlreadyInProgressException: () => RequestAlreadyInProgressException,
  ResolveComponentCandidatesCommand: () => ResolveComponentCandidatesCommand,
  ResourceNotFoundException: () => ResourceNotFoundException,
  S3EndpointType: () => S3EndpointType,
  ServiceQuotaExceededException: () => ServiceQuotaExceededException,
  TagResourceCommand: () => TagResourceCommand,
  ThrottlingException: () => ThrottlingException,
  UntagResourceCommand: () => UntagResourceCommand,
  UpdateConnectivityInfoCommand: () => UpdateConnectivityInfoCommand,
  ValidationException: () => ValidationException,
  ValidationExceptionReason: () => ValidationExceptionReason,
  VendorGuidance: () => VendorGuidance,
  __Client: () => import_smithy_client.Client,
  paginateListClientDevicesAssociatedWithCoreDevice: () => paginateListClientDevicesAssociatedWithCoreDevice,
  paginateListComponentVersions: () => paginateListComponentVersions,
  paginateListComponents: () => paginateListComponents,
  paginateListCoreDevices: () => paginateListCoreDevices,
  paginateListDeployments: () => paginateListDeployments,
  paginateListEffectiveDeployments: () => paginateListEffectiveDeployments,
  paginateListInstalledComponents: () => paginateListInstalledComponents
});
module.exports = __toCommonJS(src_exports);

// src/GreengrassV2Client.ts
var import_middleware_host_header = require("@aws-sdk/middleware-host-header");
var import_middleware_logger = require("@aws-sdk/middleware-logger");
var import_middleware_recursion_detection = require("@aws-sdk/middleware-recursion-detection");
var import_middleware_user_agent = require("@aws-sdk/middleware-user-agent");
var import_config_resolver = require("@smithy/config-resolver");
var import_core = require("@smithy/core");
var import_middleware_content_length = require("@smithy/middleware-content-length");
var import_middleware_endpoint = require("@smithy/middleware-endpoint");
var import_middleware_retry = require("@smithy/middleware-retry");

var import_httpAuthSchemeProvider = require("./auth/httpAuthSchemeProvider");

// src/endpoint/EndpointParameters.ts
var resolveClientEndpointParameters = /* @__PURE__ */ __name((options) => {
  return {
    ...options,
    useDualstackEndpoint: options.useDualstackEndpoint ?? false,
    useFipsEndpoint: options.useFipsEndpoint ?? false,
    defaultSigningName: "greengrass"
  };
}, "resolveClientEndpointParameters");
var commonParams = {
  UseFIPS: { type: "builtInParams", name: "useFipsEndpoint" },
  Endpoint: { type: "builtInParams", name: "endpoint" },
  Region: { type: "builtInParams", name: "region" },
  UseDualStack: { type: "builtInParams", name: "useDualstackEndpoint" }
};

// src/GreengrassV2Client.ts
var import_runtimeConfig = require("././runtimeConfig");

// src/runtimeExtensions.ts
var import_region_config_resolver = require("@aws-sdk/region-config-resolver");
var import_protocol_http = require("@smithy/protocol-http");
var import_smithy_client = require("@smithy/smithy-client");

// src/auth/httpAuthExtensionConfiguration.ts
var getHttpAuthExtensionConfiguration = /* @__PURE__ */ __name((runtimeConfig) => {
  const _httpAuthSchemes = runtimeConfig.httpAuthSchemes;
  let _httpAuthSchemeProvider = runtimeConfig.httpAuthSchemeProvider;
  let _credentials = runtimeConfig.credentials;
  return {
    setHttpAuthScheme(httpAuthScheme) {
      const index = _httpAuthSchemes.findIndex((scheme) => scheme.schemeId === httpAuthScheme.schemeId);
      if (index === -1) {
        _httpAuthSchemes.push(httpAuthScheme);
      } else {
        _httpAuthSchemes.splice(index, 1, httpAuthScheme);
      }
    },
    httpAuthSchemes() {
      return _httpAuthSchemes;
    },
    setHttpAuthSchemeProvider(httpAuthSchemeProvider) {
      _httpAuthSchemeProvider = httpAuthSchemeProvider;
    },
    httpAuthSchemeProvider() {
      return _httpAuthSchemeProvider;
    },
    setCredentials(credentials) {
      _credentials = credentials;
    },
    credentials() {
      return _credentials;
    }
  };
}, "getHttpAuthExtensionConfiguration");
var resolveHttpAuthRuntimeConfig = /* @__PURE__ */ __name((config) => {
  return {
    httpAuthSchemes: config.httpAuthSchemes(),
    httpAuthSchemeProvider: config.httpAuthSchemeProvider(),
    credentials: config.credentials()
  };
}, "resolveHttpAuthRuntimeConfig");

// src/runtimeExtensions.ts
var asPartial = /* @__PURE__ */ __name((t) => t, "asPartial");
var resolveRuntimeExtensions = /* @__PURE__ */ __name((runtimeConfig, extensions) => {
  const extensionConfiguration = {
    ...asPartial((0, import_region_config_resolver.getAwsRegionExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_smithy_client.getDefaultExtensionConfiguration)(runtimeConfig)),
    ...asPartial((0, import_protocol_http.getHttpHandlerExtensionConfiguration)(runtimeConfig)),
    ...asPartial(getHttpAuthExtensionConfiguration(runtimeConfig))
  };
  extensions.forEach((extension) => extension.configure(extensionConfiguration));
  return {
    ...runtimeConfig,
    ...(0, import_region_config_resolver.resolveAwsRegionExtensionConfiguration)(extensionConfiguration),
    ...(0, import_smithy_client.resolveDefaultRuntimeConfig)(extensionConfiguration),
    ...(0, import_protocol_http.resolveHttpHandlerRuntimeConfig)(extensionConfiguration),
    ...resolveHttpAuthRuntimeConfig(extensionConfiguration)
  };
}, "resolveRuntimeExtensions");

// src/GreengrassV2Client.ts
var GreengrassV2Client = class extends import_smithy_client.Client {
  static {
    __name(this, "GreengrassV2Client");
  }
  /**
   * The resolved configuration of GreengrassV2Client class. This is resolved and normalized from the {@link GreengrassV2ClientConfig | constructor configuration interface}.
   */
  config;
  constructor(...[configuration]) {
    const _config_0 = (0, import_runtimeConfig.getRuntimeConfig)(configuration || {});
    const _config_1 = resolveClientEndpointParameters(_config_0);
    const _config_2 = (0, import_middleware_user_agent.resolveUserAgentConfig)(_config_1);
    const _config_3 = (0, import_middleware_retry.resolveRetryConfig)(_config_2);
    const _config_4 = (0, import_config_resolver.resolveRegionConfig)(_config_3);
    const _config_5 = (0, import_middleware_host_header.resolveHostHeaderConfig)(_config_4);
    const _config_6 = (0, import_middleware_endpoint.resolveEndpointConfig)(_config_5);
    const _config_7 = (0, import_httpAuthSchemeProvider.resolveHttpAuthSchemeConfig)(_config_6);
    const _config_8 = resolveRuntimeExtensions(_config_7, configuration?.extensions || []);
    super(_config_8);
    this.config = _config_8;
    this.middlewareStack.use((0, import_middleware_user_agent.getUserAgentPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_retry.getRetryPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_content_length.getContentLengthPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_host_header.getHostHeaderPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_logger.getLoggerPlugin)(this.config));
    this.middlewareStack.use((0, import_middleware_recursion_detection.getRecursionDetectionPlugin)(this.config));
    this.middlewareStack.use(
      (0, import_core.getHttpAuthSchemeEndpointRuleSetPlugin)(this.config, {
        httpAuthSchemeParametersProvider: import_httpAuthSchemeProvider.defaultGreengrassV2HttpAuthSchemeParametersProvider,
        identityProviderConfigProvider: async (config) => new import_core.DefaultIdentityProviderConfig({
          "aws.auth#sigv4": config.credentials
        })
      })
    );
    this.middlewareStack.use((0, import_core.getHttpSigningPlugin)(this.config));
  }
  /**
   * Destroy underlying resources, like sockets. It's usually not necessary to do this.
   * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.
   * Otherwise, sockets might stay open for quite a long time before the server terminates them.
   */
  destroy() {
    super.destroy();
  }
};

// src/GreengrassV2.ts


// src/commands/AssociateServiceRoleToAccountCommand.ts

var import_middleware_serde = require("@smithy/middleware-serde");


// src/protocols/Aws_restJson1.ts
var import_core2 = require("@aws-sdk/core");


var import_uuid = require("uuid");

// src/models/GreengrassV2ServiceException.ts

var GreengrassV2ServiceException = class _GreengrassV2ServiceException extends import_smithy_client.ServiceException {
  static {
    __name(this, "GreengrassV2ServiceException");
  }
  /**
   * @internal
   */
  constructor(options) {
    super(options);
    Object.setPrototypeOf(this, _GreengrassV2ServiceException.prototype);
  }
};

// src/models/models_0.ts
var AccessDeniedException = class _AccessDeniedException extends GreengrassV2ServiceException {
  static {
    __name(this, "AccessDeniedException");
  }
  name = "AccessDeniedException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "AccessDeniedException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _AccessDeniedException.prototype);
  }
};
var InternalServerException = class _InternalServerException extends GreengrassV2ServiceException {
  static {
    __name(this, "InternalServerException");
  }
  name = "InternalServerException";
  $fault = "server";
  /**
   * <p>The amount of time to wait before you retry the request.</p>
   * @public
   */
  retryAfterSeconds;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "InternalServerException",
      $fault: "server",
      ...opts
    });
    Object.setPrototypeOf(this, _InternalServerException.prototype);
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
var ValidationExceptionReason = {
  CANNOT_PARSE: "CANNOT_PARSE",
  FIELD_VALIDATION_FAILED: "FIELD_VALIDATION_FAILED",
  OTHER: "OTHER",
  UNKNOWN_OPERATION: "UNKNOWN_OPERATION"
};
var ValidationException = class _ValidationException extends GreengrassV2ServiceException {
  static {
    __name(this, "ValidationException");
  }
  name = "ValidationException";
  $fault = "client";
  /**
   * <p>The reason for the validation exception.</p>
   * @public
   */
  reason;
  /**
   * <p>The list of fields that failed to validate.</p>
   * @public
   */
  fields;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ValidationException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ValidationException.prototype);
    this.reason = opts.reason;
    this.fields = opts.fields;
  }
};
var ResourceNotFoundException = class _ResourceNotFoundException extends GreengrassV2ServiceException {
  static {
    __name(this, "ResourceNotFoundException");
  }
  name = "ResourceNotFoundException";
  $fault = "client";
  /**
   * <p>The ID of the resource that isn't found.</p>
   * @public
   */
  resourceId;
  /**
   * <p>The type of the resource that isn't found.</p>
   * @public
   */
  resourceType;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ResourceNotFoundException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ResourceNotFoundException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
var ThrottlingException = class _ThrottlingException extends GreengrassV2ServiceException {
  static {
    __name(this, "ThrottlingException");
  }
  name = "ThrottlingException";
  $fault = "client";
  /**
   * <p>The code for the quota in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service Quotas</a>.</p>
   * @public
   */
  quotaCode;
  /**
   * <p>The code for the service in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service Quotas</a>.</p>
   * @public
   */
  serviceCode;
  /**
   * <p>The amount of time to wait before you retry the request.</p>
   * @public
   */
  retryAfterSeconds;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ThrottlingException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ThrottlingException.prototype);
    this.quotaCode = opts.quotaCode;
    this.serviceCode = opts.serviceCode;
    this.retryAfterSeconds = opts.retryAfterSeconds;
  }
};
var ConflictException = class _ConflictException extends GreengrassV2ServiceException {
  static {
    __name(this, "ConflictException");
  }
  name = "ConflictException";
  $fault = "client";
  /**
   * <p>The ID of the resource that conflicts with the request.</p>
   * @public
   */
  resourceId;
  /**
   * <p>The type of the resource that conflicts with the request.</p>
   * @public
   */
  resourceType;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ConflictException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ConflictException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
  }
};
var CloudComponentState = {
  DEPLOYABLE: "DEPLOYABLE",
  DEPRECATED: "DEPRECATED",
  FAILED: "FAILED",
  INITIATED: "INITIATED",
  REQUESTED: "REQUESTED"
};
var VendorGuidance = {
  ACTIVE: "ACTIVE",
  DELETED: "DELETED",
  DISCONTINUED: "DISCONTINUED"
};
var ComponentDependencyType = {
  HARD: "HARD",
  SOFT: "SOFT"
};
var ComponentVisibilityScope = {
  PRIVATE: "PRIVATE",
  PUBLIC: "PUBLIC"
};
var CoreDeviceStatus = {
  HEALTHY: "HEALTHY",
  UNHEALTHY: "UNHEALTHY"
};
var LambdaEventSourceType = {
  IOT_CORE: "IOT_CORE",
  PUB_SUB: "PUB_SUB"
};
var LambdaInputPayloadEncodingType = {
  BINARY: "binary",
  JSON: "json"
};
var LambdaFilesystemPermission = {
  RO: "ro",
  RW: "rw"
};
var LambdaIsolationMode = {
  GREENGRASS_CONTAINER: "GreengrassContainer",
  NO_CONTAINER: "NoContainer"
};
var RequestAlreadyInProgressException = class _RequestAlreadyInProgressException extends GreengrassV2ServiceException {
  static {
    __name(this, "RequestAlreadyInProgressException");
  }
  name = "RequestAlreadyInProgressException";
  $fault = "client";
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "RequestAlreadyInProgressException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _RequestAlreadyInProgressException.prototype);
  }
};
var ServiceQuotaExceededException = class _ServiceQuotaExceededException extends GreengrassV2ServiceException {
  static {
    __name(this, "ServiceQuotaExceededException");
  }
  name = "ServiceQuotaExceededException";
  $fault = "client";
  /**
   * <p>The ID of the resource that exceeds the service quota.</p>
   * @public
   */
  resourceId;
  /**
   * <p>The type of the resource that exceeds the service quota.</p>
   * @public
   */
  resourceType;
  /**
   * <p>The code for the quota in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service Quotas</a>.</p>
   * @public
   */
  quotaCode;
  /**
   * <p>The code for the service in <a href="https://docs.aws.amazon.com/servicequotas/latest/userguide/intro.html">Service Quotas</a>.</p>
   * @public
   */
  serviceCode;
  /**
   * @internal
   */
  constructor(opts) {
    super({
      name: "ServiceQuotaExceededException",
      $fault: "client",
      ...opts
    });
    Object.setPrototypeOf(this, _ServiceQuotaExceededException.prototype);
    this.resourceId = opts.resourceId;
    this.resourceType = opts.resourceType;
    this.quotaCode = opts.quotaCode;
    this.serviceCode = opts.serviceCode;
  }
};
var DeploymentComponentUpdatePolicyAction = {
  NOTIFY_COMPONENTS: "NOTIFY_COMPONENTS",
  SKIP_NOTIFY_COMPONENTS: "SKIP_NOTIFY_COMPONENTS"
};
var DeploymentFailureHandlingPolicy = {
  DO_NOTHING: "DO_NOTHING",
  ROLLBACK: "ROLLBACK"
};
var IoTJobAbortAction = {
  CANCEL: "CANCEL"
};
var IoTJobExecutionFailureType = {
  ALL: "ALL",
  FAILED: "FAILED",
  REJECTED: "REJECTED",
  TIMED_OUT: "TIMED_OUT"
};
var DeploymentStatus = {
  ACTIVE: "ACTIVE",
  CANCELED: "CANCELED",
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  INACTIVE: "INACTIVE"
};
var DeploymentHistoryFilter = {
  ALL: "ALL",
  LATEST_ONLY: "LATEST_ONLY"
};
var EffectiveDeploymentExecutionStatus = {
  CANCELED: "CANCELED",
  COMPLETED: "COMPLETED",
  FAILED: "FAILED",
  IN_PROGRESS: "IN_PROGRESS",
  QUEUED: "QUEUED",
  REJECTED: "REJECTED",
  SUCCEEDED: "SUCCEEDED",
  TIMED_OUT: "TIMED_OUT"
};
var RecipeOutputFormat = {
  JSON: "JSON",
  YAML: "YAML"
};
var IotEndpointType = {
  fips: "fips",
  standard: "standard"
};
var S3EndpointType = {
  GLOBAL: "GLOBAL",
  REGIONAL: "REGIONAL"
};
var InstalledComponentTopologyFilter = {
  ALL: "ALL",
  ROOT: "ROOT"
};
var InstalledComponentLifecycleState = {
  BROKEN: "BROKEN",
  ERRORED: "ERRORED",
  FINISHED: "FINISHED",
  INSTALLED: "INSTALLED",
  NEW: "NEW",
  RUNNING: "RUNNING",
  STARTING: "STARTING",
  STOPPING: "STOPPING"
};

// src/protocols/Aws_restJson1.ts
var se_AssociateServiceRoleToAccountCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/greengrass/servicerole");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      RoleArn: [, , `roleArn`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_AssociateServiceRoleToAccountCommand");
var se_BatchAssociateClientDeviceWithCoreDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/greengrass/v2/coreDevices/{coreDeviceThingName}/associateClientDevices");
  b.p("coreDeviceThingName", () => input.coreDeviceThingName, "{coreDeviceThingName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      entries: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchAssociateClientDeviceWithCoreDeviceCommand");
var se_BatchDisassociateClientDeviceFromCoreDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/greengrass/v2/coreDevices/{coreDeviceThingName}/disassociateClientDevices");
  b.p("coreDeviceThingName", () => input.coreDeviceThingName, "{coreDeviceThingName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      entries: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_BatchDisassociateClientDeviceFromCoreDeviceCommand");
var se_CancelDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/deployments/{deploymentId}/cancel");
  b.p("deploymentId", () => input.deploymentId, "{deploymentId}", false);
  let body;
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CancelDeploymentCommand");
var se_CreateComponentVersionCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/greengrass/v2/createComponentVersion");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      inlineRecipe: (_) => context.base64Encoder(_),
      lambdaFunction: (_) => (0, import_smithy_client._json)(_),
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateComponentVersionCommand");
var se_CreateDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/greengrass/v2/deployments");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      clientToken: [true, (_) => _ ?? (0, import_uuid.v4)()],
      components: (_) => se_ComponentDeploymentSpecifications(_, context),
      deploymentName: [],
      deploymentPolicies: (_) => (0, import_smithy_client._json)(_),
      iotJobConfiguration: (_) => se_DeploymentIoTJobConfiguration(_, context),
      parentTargetArn: [],
      tags: (_) => (0, import_smithy_client._json)(_),
      targetArn: []
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_CreateDeploymentCommand");
var se_DeleteComponentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/components/{arn}");
  b.p("arn", () => input.arn, "{arn}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteComponentCommand");
var se_DeleteCoreDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/coreDevices/{coreDeviceThingName}");
  b.p("coreDeviceThingName", () => input.coreDeviceThingName, "{coreDeviceThingName}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteCoreDeviceCommand");
var se_DeleteDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/deployments/{deploymentId}");
  b.p("deploymentId", () => input.deploymentId, "{deploymentId}", false);
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DeleteDeploymentCommand");
var se_DescribeComponentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/components/{arn}/metadata");
  b.p("arn", () => input.arn, "{arn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_DescribeComponentCommand");
var se_DisassociateServiceRoleFromAccountCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/servicerole");
  let body;
  b.m("DELETE").h(headers).b(body);
  return b.build();
}, "se_DisassociateServiceRoleFromAccountCommand");
var se_GetComponentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/components/{arn}");
  b.p("arn", () => input.arn, "{arn}", false);
  const query = (0, import_smithy_client.map)({
    [_rOF]: [, input[_rOF]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetComponentCommand");
var se_GetComponentVersionArtifactCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = (0, import_smithy_client.map)({}, import_smithy_client.isSerializableHeaderValue, {
    [_xaiet]: input[_iET]
  });
  b.bp("/greengrass/v2/components/{arn}/artifacts/{artifactName+}");
  b.p("arn", () => input.arn, "{arn}", false);
  b.p("artifactName", () => input.artifactName, "{artifactName+}", true);
  const query = (0, import_smithy_client.map)({
    [_sET]: [, input[_sET]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_GetComponentVersionArtifactCommand");
var se_GetConnectivityInfoCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/things/{thingName}/connectivityInfo");
  b.p("thingName", () => input.thingName, "{thingName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetConnectivityInfoCommand");
var se_GetCoreDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/coreDevices/{coreDeviceThingName}");
  b.p("coreDeviceThingName", () => input.coreDeviceThingName, "{coreDeviceThingName}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetCoreDeviceCommand");
var se_GetDeploymentCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/deployments/{deploymentId}");
  b.p("deploymentId", () => input.deploymentId, "{deploymentId}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetDeploymentCommand");
var se_GetServiceRoleForAccountCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/servicerole");
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_GetServiceRoleForAccountCommand");
var se_ListClientDevicesAssociatedWithCoreDeviceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/coreDevices/{coreDeviceThingName}/associatedClientDevices");
  b.p("coreDeviceThingName", () => input.coreDeviceThingName, "{coreDeviceThingName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListClientDevicesAssociatedWithCoreDeviceCommand");
var se_ListComponentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/components");
  const query = (0, import_smithy_client.map)({
    [_s]: [, input[_s]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListComponentsCommand");
var se_ListComponentVersionsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/components/{arn}/versions");
  b.p("arn", () => input.arn, "{arn}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListComponentVersionsCommand");
var se_ListCoreDevicesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/coreDevices");
  const query = (0, import_smithy_client.map)({
    [_tGA]: [, input[_tGA]],
    [_st]: [, input[_st]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]],
    [_r]: [, input[_r]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListCoreDevicesCommand");
var se_ListDeploymentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/deployments");
  const query = (0, import_smithy_client.map)({
    [_tA]: [, input[_tA]],
    [_hF]: [, input[_hF]],
    [_pTA]: [, input[_pTA]],
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListDeploymentsCommand");
var se_ListEffectiveDeploymentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/coreDevices/{coreDeviceThingName}/effectiveDeployments");
  b.p("coreDeviceThingName", () => input.coreDeviceThingName, "{coreDeviceThingName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListEffectiveDeploymentsCommand");
var se_ListInstalledComponentsCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/greengrass/v2/coreDevices/{coreDeviceThingName}/installedComponents");
  b.p("coreDeviceThingName", () => input.coreDeviceThingName, "{coreDeviceThingName}", false);
  const query = (0, import_smithy_client.map)({
    [_mR]: [() => input.maxResults !== void 0, () => input[_mR].toString()],
    [_nT]: [, input[_nT]],
    [_tF]: [, input[_tF]]
  });
  let body;
  b.m("GET").h(headers).q(query).b(body);
  return b.build();
}, "se_ListInstalledComponentsCommand");
var se_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  b.m("GET").h(headers).b(body);
  return b.build();
}, "se_ListTagsForResourceCommand");
var se_ResolveComponentCandidatesCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/greengrass/v2/resolveComponentCandidates");
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      componentCandidates: (_) => (0, import_smithy_client._json)(_),
      platform: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_ResolveComponentCandidatesCommand");
var se_TagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      tags: (_) => (0, import_smithy_client._json)(_)
    })
  );
  b.m("POST").h(headers).b(body);
  return b.build();
}, "se_TagResourceCommand");
var se_UntagResourceCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {};
  b.bp("/tags/{resourceArn}");
  b.p("resourceArn", () => input.resourceArn, "{resourceArn}", false);
  const query = (0, import_smithy_client.map)({
    [_tK]: [(0, import_smithy_client.expectNonNull)(input.tagKeys, `tagKeys`) != null, () => input[_tK] || []]
  });
  let body;
  b.m("DELETE").h(headers).q(query).b(body);
  return b.build();
}, "se_UntagResourceCommand");
var se_UpdateConnectivityInfoCommand = /* @__PURE__ */ __name(async (input, context) => {
  const b = (0, import_core.requestBuilder)(input, context);
  const headers = {
    "content-type": "application/json"
  };
  b.bp("/greengrass/things/{thingName}/connectivityInfo");
  b.p("thingName", () => input.thingName, "{thingName}", false);
  let body;
  body = JSON.stringify(
    (0, import_smithy_client.take)(input, {
      ConnectivityInfo: [, (_) => se_connectivityInfoList(_, context), `connectivityInfo`]
    })
  );
  b.m("PUT").h(headers).b(body);
  return b.build();
}, "se_UpdateConnectivityInfoCommand");
var de_AssociateServiceRoleToAccountCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    associatedAt: [, import_smithy_client.expectString, `AssociatedAt`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_AssociateServiceRoleToAccountCommand");
var de_BatchAssociateClientDeviceWithCoreDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    errorEntries: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchAssociateClientDeviceWithCoreDeviceCommand");
var de_BatchDisassociateClientDeviceFromCoreDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    errorEntries: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_BatchDisassociateClientDeviceFromCoreDeviceCommand");
var de_CancelDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CancelDeploymentCommand");
var de_CreateComponentVersionCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    componentName: import_smithy_client.expectString,
    componentVersion: import_smithy_client.expectString,
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    status: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateComponentVersionCommand");
var de_CreateDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 201 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    deploymentId: import_smithy_client.expectString,
    iotJobArn: import_smithy_client.expectString,
    iotJobId: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_CreateDeploymentCommand");
var de_DeleteComponentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteComponentCommand");
var de_DeleteCoreDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteCoreDeviceCommand");
var de_DeleteDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 204 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_DeleteDeploymentCommand");
var de_DescribeComponentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    arn: import_smithy_client.expectString,
    componentName: import_smithy_client.expectString,
    componentVersion: import_smithy_client.expectString,
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    platforms: import_smithy_client._json,
    publisher: import_smithy_client.expectString,
    status: import_smithy_client._json,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DescribeComponentCommand");
var de_DisassociateServiceRoleFromAccountCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    disassociatedAt: [, import_smithy_client.expectString, `DisassociatedAt`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_DisassociateServiceRoleFromAccountCommand");
var de_GetComponentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    recipe: context.base64Decoder,
    recipeOutputFormat: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetComponentCommand");
var de_GetComponentVersionArtifactCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    preSignedUrl: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetComponentVersionArtifactCommand");
var de_GetConnectivityInfoCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    connectivityInfo: [, (_) => de_connectivityInfoList(_, context), `ConnectivityInfo`],
    message: [, import_smithy_client.expectString, `Message`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetConnectivityInfoCommand");
var de_GetCoreDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    architecture: import_smithy_client.expectString,
    coreDeviceThingName: import_smithy_client.expectString,
    coreVersion: import_smithy_client.expectString,
    lastStatusUpdateTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    platform: import_smithy_client.expectString,
    runtime: import_smithy_client.expectString,
    status: import_smithy_client.expectString,
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetCoreDeviceCommand");
var de_GetDeploymentCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    components: (_) => de_ComponentDeploymentSpecifications(_, context),
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentId: import_smithy_client.expectString,
    deploymentName: import_smithy_client.expectString,
    deploymentPolicies: import_smithy_client._json,
    deploymentStatus: import_smithy_client.expectString,
    iotJobArn: import_smithy_client.expectString,
    iotJobConfiguration: (_) => de_DeploymentIoTJobConfiguration(_, context),
    iotJobId: import_smithy_client.expectString,
    isLatestForTarget: import_smithy_client.expectBoolean,
    parentTargetArn: import_smithy_client.expectString,
    revisionId: import_smithy_client.expectString,
    tags: import_smithy_client._json,
    targetArn: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetDeploymentCommand");
var de_GetServiceRoleForAccountCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    associatedAt: [, import_smithy_client.expectString, `AssociatedAt`],
    roleArn: [, import_smithy_client.expectString, `RoleArn`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_GetServiceRoleForAccountCommand");
var de_ListClientDevicesAssociatedWithCoreDeviceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    associatedClientDevices: (_) => de_AssociatedClientDeviceList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListClientDevicesAssociatedWithCoreDeviceCommand");
var de_ListComponentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    components: (_) => de_ComponentList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListComponentsCommand");
var de_ListComponentVersionsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    componentVersions: import_smithy_client._json,
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListComponentVersionsCommand");
var de_ListCoreDevicesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    coreDevices: (_) => de_CoreDevicesList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListCoreDevicesCommand");
var de_ListDeploymentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    deployments: (_) => de_DeploymentList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListDeploymentsCommand");
var de_ListEffectiveDeploymentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    effectiveDeployments: (_) => de_EffectiveDeploymentsList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListEffectiveDeploymentsCommand");
var de_ListInstalledComponentsCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    installedComponents: (_) => de_InstalledComponentList(_, context),
    nextToken: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListInstalledComponentsCommand");
var de_ListTagsForResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    tags: import_smithy_client._json
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ListTagsForResourceCommand");
var de_ResolveComponentCandidatesCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    resolvedComponentVersions: (_) => de_ResolvedComponentVersionsList(_, context)
  });
  Object.assign(contents, doc);
  return contents;
}, "de_ResolveComponentCandidatesCommand");
var de_TagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_TagResourceCommand");
var de_UntagResourceCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  await (0, import_smithy_client.collectBody)(output.body, context);
  return contents;
}, "de_UntagResourceCommand");
var de_UpdateConnectivityInfoCommand = /* @__PURE__ */ __name(async (output, context) => {
  if (output.statusCode !== 200 && output.statusCode >= 300) {
    return de_CommandError(output, context);
  }
  const contents = (0, import_smithy_client.map)({
    $metadata: deserializeMetadata(output)
  });
  const data = (0, import_smithy_client.expectNonNull)((0, import_smithy_client.expectObject)(await (0, import_core2.parseJsonBody)(output.body, context)), "body");
  const doc = (0, import_smithy_client.take)(data, {
    message: [, import_smithy_client.expectString, `Message`],
    version: [, import_smithy_client.expectString, `Version`]
  });
  Object.assign(contents, doc);
  return contents;
}, "de_UpdateConnectivityInfoCommand");
var de_CommandError = /* @__PURE__ */ __name(async (output, context) => {
  const parsedOutput = {
    ...output,
    body: await (0, import_core2.parseJsonErrorBody)(output.body, context)
  };
  const errorCode = (0, import_core2.loadRestJsonErrorCode)(output, parsedOutput.body);
  switch (errorCode) {
    case "InternalServerException":
    case "com.amazonaws.greengrassv2#InternalServerException":
      throw await de_InternalServerExceptionRes(parsedOutput, context);
    case "ValidationException":
    case "com.amazonaws.greengrassv2#ValidationException":
      throw await de_ValidationExceptionRes(parsedOutput, context);
    case "AccessDeniedException":
    case "com.amazonaws.greengrassv2#AccessDeniedException":
      throw await de_AccessDeniedExceptionRes(parsedOutput, context);
    case "ResourceNotFoundException":
    case "com.amazonaws.greengrassv2#ResourceNotFoundException":
      throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);
    case "ThrottlingException":
    case "com.amazonaws.greengrassv2#ThrottlingException":
      throw await de_ThrottlingExceptionRes(parsedOutput, context);
    case "ConflictException":
    case "com.amazonaws.greengrassv2#ConflictException":
      throw await de_ConflictExceptionRes(parsedOutput, context);
    case "RequestAlreadyInProgressException":
    case "com.amazonaws.greengrassv2#RequestAlreadyInProgressException":
      throw await de_RequestAlreadyInProgressExceptionRes(parsedOutput, context);
    case "ServiceQuotaExceededException":
    case "com.amazonaws.greengrassv2#ServiceQuotaExceededException":
      throw await de_ServiceQuotaExceededExceptionRes(parsedOutput, context);
    default:
      const parsedBody = parsedOutput.body;
      return throwDefaultError({
        output,
        parsedBody,
        errorCode
      });
  }
}, "de_CommandError");
var throwDefaultError = (0, import_smithy_client.withBaseException)(GreengrassV2ServiceException);
var de_AccessDeniedExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new AccessDeniedException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_AccessDeniedExceptionRes");
var de_ConflictExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ConflictException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ConflictExceptionRes");
var de_InternalServerExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [() => void 0 !== parsedOutput.headers[_ra], () => (0, import_smithy_client.strictParseInt32)(parsedOutput.headers[_ra])]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new InternalServerException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_InternalServerExceptionRes");
var de_RequestAlreadyInProgressExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new RequestAlreadyInProgressException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_RequestAlreadyInProgressExceptionRes");
var de_ResourceNotFoundExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ResourceNotFoundException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ResourceNotFoundExceptionRes");
var de_ServiceQuotaExceededExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    quotaCode: import_smithy_client.expectString,
    resourceId: import_smithy_client.expectString,
    resourceType: import_smithy_client.expectString,
    serviceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ServiceQuotaExceededException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ServiceQuotaExceededExceptionRes");
var de_ThrottlingExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({
    [_rAS]: [() => void 0 !== parsedOutput.headers[_ra], () => (0, import_smithy_client.strictParseInt32)(parsedOutput.headers[_ra])]
  });
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    message: import_smithy_client.expectString,
    quotaCode: import_smithy_client.expectString,
    serviceCode: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ThrottlingException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ThrottlingExceptionRes");
var de_ValidationExceptionRes = /* @__PURE__ */ __name(async (parsedOutput, context) => {
  const contents = (0, import_smithy_client.map)({});
  const data = parsedOutput.body;
  const doc = (0, import_smithy_client.take)(data, {
    fields: import_smithy_client._json,
    message: import_smithy_client.expectString,
    reason: import_smithy_client.expectString
  });
  Object.assign(contents, doc);
  const exception = new ValidationException({
    $metadata: deserializeMetadata(parsedOutput),
    ...contents
  });
  return (0, import_smithy_client.decorateServiceException)(exception, parsedOutput.body);
}, "de_ValidationExceptionRes");
var se_ComponentDeploymentSpecification = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    componentVersion: [],
    configurationUpdate: import_smithy_client._json,
    runWith: (_) => se_ComponentRunWith(_, context)
  });
}, "se_ComponentDeploymentSpecification");
var se_ComponentDeploymentSpecifications = /* @__PURE__ */ __name((input, context) => {
  return Object.entries(input).reduce((acc, [key, value]) => {
    if (value === null) {
      return acc;
    }
    acc[key] = se_ComponentDeploymentSpecification(value, context);
    return acc;
  }, {});
}, "se_ComponentDeploymentSpecifications");
var se_ComponentRunWith = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    posixUser: [],
    systemResourceLimits: (_) => se_SystemResourceLimits(_, context),
    windowsUser: []
  });
}, "se_ComponentRunWith");
var se_ConnectivityInfo = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    HostAddress: [, , `hostAddress`],
    Id: [, , `id`],
    Metadata: [, , `metadata`],
    PortNumber: [, , `portNumber`]
  });
}, "se_ConnectivityInfo");
var se_connectivityInfoList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_ConnectivityInfo(entry, context);
  });
}, "se_connectivityInfoList");
var se_DeploymentIoTJobConfiguration = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    abortConfig: (_) => se_IoTJobAbortConfig(_, context),
    jobExecutionsRolloutConfig: (_) => se_IoTJobExecutionsRolloutConfig(_, context),
    timeoutConfig: import_smithy_client._json
  });
}, "se_DeploymentIoTJobConfiguration");
var se_IoTJobAbortConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    criteriaList: (_) => se_IoTJobAbortCriteriaList(_, context)
  });
}, "se_IoTJobAbortConfig");
var se_IoTJobAbortCriteria = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    action: [],
    failureType: [],
    minNumberOfExecutedThings: [],
    thresholdPercentage: import_smithy_client.serializeFloat
  });
}, "se_IoTJobAbortCriteria");
var se_IoTJobAbortCriteriaList = /* @__PURE__ */ __name((input, context) => {
  return input.filter((e) => e != null).map((entry) => {
    return se_IoTJobAbortCriteria(entry, context);
  });
}, "se_IoTJobAbortCriteriaList");
var se_IoTJobExecutionsRolloutConfig = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    exponentialRate: (_) => se_IoTJobExponentialRolloutRate(_, context),
    maximumPerMinute: []
  });
}, "se_IoTJobExecutionsRolloutConfig");
var se_IoTJobExponentialRolloutRate = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    baseRatePerMinute: [],
    incrementFactor: import_smithy_client.serializeFloat,
    rateIncreaseCriteria: import_smithy_client._json
  });
}, "se_IoTJobExponentialRolloutRate");
var se_SystemResourceLimits = /* @__PURE__ */ __name((input, context) => {
  return (0, import_smithy_client.take)(input, {
    cpus: import_smithy_client.serializeFloat,
    memory: []
  });
}, "se_SystemResourceLimits");
var de_AssociatedClientDevice = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    associationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    thingName: import_smithy_client.expectString
  });
}, "de_AssociatedClientDevice");
var de_AssociatedClientDeviceList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_AssociatedClientDevice(entry, context);
  });
  return retVal;
}, "de_AssociatedClientDeviceList");
var de_Component = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    componentName: import_smithy_client.expectString,
    latestVersion: (_) => de_ComponentLatestVersion(_, context)
  });
}, "de_Component");
var de_ComponentDeploymentSpecification = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    componentVersion: import_smithy_client.expectString,
    configurationUpdate: import_smithy_client._json,
    runWith: (_) => de_ComponentRunWith(_, context)
  });
}, "de_ComponentDeploymentSpecification");
var de_ComponentDeploymentSpecifications = /* @__PURE__ */ __name((output, context) => {
  return Object.entries(output).reduce(
    (acc, [key, value]) => {
      if (value === null) {
        return acc;
      }
      acc[key] = de_ComponentDeploymentSpecification(value, context);
      return acc;
    },
    {}
  );
}, "de_ComponentDeploymentSpecifications");
var de_ComponentLatestVersion = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    componentVersion: import_smithy_client.expectString,
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    description: import_smithy_client.expectString,
    platforms: import_smithy_client._json,
    publisher: import_smithy_client.expectString
  });
}, "de_ComponentLatestVersion");
var de_ComponentList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Component(entry, context);
  });
  return retVal;
}, "de_ComponentList");
var de_ComponentRunWith = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    posixUser: import_smithy_client.expectString,
    systemResourceLimits: (_) => de_SystemResourceLimits(_, context),
    windowsUser: import_smithy_client.expectString
  });
}, "de_ComponentRunWith");
var de_ConnectivityInfo = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    hostAddress: [, import_smithy_client.expectString, `HostAddress`],
    id: [, import_smithy_client.expectString, `Id`],
    metadata: [, import_smithy_client.expectString, `Metadata`],
    portNumber: [, import_smithy_client.expectInt32, `PortNumber`]
  });
}, "de_ConnectivityInfo");
var de_connectivityInfoList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ConnectivityInfo(entry, context);
  });
  return retVal;
}, "de_connectivityInfoList");
var de_CoreDevice = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    architecture: import_smithy_client.expectString,
    coreDeviceThingName: import_smithy_client.expectString,
    lastStatusUpdateTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    platform: import_smithy_client.expectString,
    runtime: import_smithy_client.expectString,
    status: import_smithy_client.expectString
  });
}, "de_CoreDevice");
var de_CoreDevicesList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_CoreDevice(entry, context);
  });
  return retVal;
}, "de_CoreDevicesList");
var de_Deployment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentId: import_smithy_client.expectString,
    deploymentName: import_smithy_client.expectString,
    deploymentStatus: import_smithy_client.expectString,
    isLatestForTarget: import_smithy_client.expectBoolean,
    parentTargetArn: import_smithy_client.expectString,
    revisionId: import_smithy_client.expectString,
    targetArn: import_smithy_client.expectString
  });
}, "de_Deployment");
var de_DeploymentIoTJobConfiguration = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    abortConfig: (_) => de_IoTJobAbortConfig(_, context),
    jobExecutionsRolloutConfig: (_) => de_IoTJobExecutionsRolloutConfig(_, context),
    timeoutConfig: import_smithy_client._json
  });
}, "de_DeploymentIoTJobConfiguration");
var de_DeploymentList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_Deployment(entry, context);
  });
  return retVal;
}, "de_DeploymentList");
var de_EffectiveDeployment = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    coreDeviceExecutionStatus: import_smithy_client.expectString,
    creationTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    deploymentId: import_smithy_client.expectString,
    deploymentName: import_smithy_client.expectString,
    description: import_smithy_client.expectString,
    iotJobArn: import_smithy_client.expectString,
    iotJobId: import_smithy_client.expectString,
    modifiedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    reason: import_smithy_client.expectString,
    statusDetails: import_smithy_client._json,
    targetArn: import_smithy_client.expectString
  });
}, "de_EffectiveDeployment");
var de_EffectiveDeploymentsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_EffectiveDeployment(entry, context);
  });
  return retVal;
}, "de_EffectiveDeploymentsList");
var de_InstalledComponent = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    componentName: import_smithy_client.expectString,
    componentVersion: import_smithy_client.expectString,
    isRoot: import_smithy_client.expectBoolean,
    lastInstallationSource: import_smithy_client.expectString,
    lastReportedTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lastStatusChangeTimestamp: (_) => (0, import_smithy_client.expectNonNull)((0, import_smithy_client.parseEpochTimestamp)((0, import_smithy_client.expectNumber)(_))),
    lifecycleState: import_smithy_client.expectString,
    lifecycleStateDetails: import_smithy_client.expectString,
    lifecycleStatusCodes: import_smithy_client._json
  });
}, "de_InstalledComponent");
var de_InstalledComponentList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_InstalledComponent(entry, context);
  });
  return retVal;
}, "de_InstalledComponentList");
var de_IoTJobAbortConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    criteriaList: (_) => de_IoTJobAbortCriteriaList(_, context)
  });
}, "de_IoTJobAbortConfig");
var de_IoTJobAbortCriteria = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    action: import_smithy_client.expectString,
    failureType: import_smithy_client.expectString,
    minNumberOfExecutedThings: import_smithy_client.expectInt32,
    thresholdPercentage: import_smithy_client.limitedParseDouble
  });
}, "de_IoTJobAbortCriteria");
var de_IoTJobAbortCriteriaList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_IoTJobAbortCriteria(entry, context);
  });
  return retVal;
}, "de_IoTJobAbortCriteriaList");
var de_IoTJobExecutionsRolloutConfig = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    exponentialRate: (_) => de_IoTJobExponentialRolloutRate(_, context),
    maximumPerMinute: import_smithy_client.expectInt32
  });
}, "de_IoTJobExecutionsRolloutConfig");
var de_IoTJobExponentialRolloutRate = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    baseRatePerMinute: import_smithy_client.expectInt32,
    incrementFactor: import_smithy_client.limitedParseDouble,
    rateIncreaseCriteria: import_smithy_client._json
  });
}, "de_IoTJobExponentialRolloutRate");
var de_ResolvedComponentVersion = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    arn: import_smithy_client.expectString,
    componentName: import_smithy_client.expectString,
    componentVersion: import_smithy_client.expectString,
    message: import_smithy_client.expectString,
    recipe: context.base64Decoder,
    vendorGuidance: import_smithy_client.expectString
  });
}, "de_ResolvedComponentVersion");
var de_ResolvedComponentVersionsList = /* @__PURE__ */ __name((output, context) => {
  const retVal = (output || []).filter((e) => e != null).map((entry) => {
    return de_ResolvedComponentVersion(entry, context);
  });
  return retVal;
}, "de_ResolvedComponentVersionsList");
var de_SystemResourceLimits = /* @__PURE__ */ __name((output, context) => {
  return (0, import_smithy_client.take)(output, {
    cpus: import_smithy_client.limitedParseDouble,
    memory: import_smithy_client.expectLong
  });
}, "de_SystemResourceLimits");
var deserializeMetadata = /* @__PURE__ */ __name((output) => ({
  httpStatusCode: output.statusCode,
  requestId: output.headers["x-amzn-requestid"] ?? output.headers["x-amzn-request-id"] ?? output.headers["x-amz-request-id"],
  extendedRequestId: output.headers["x-amz-id-2"],
  cfId: output.headers["x-amz-cf-id"]
}), "deserializeMetadata");
var _hF = "historyFilter";
var _iET = "iotEndpointType";
var _mR = "maxResults";
var _nT = "nextToken";
var _pTA = "parentTargetArn";
var _r = "runtime";
var _rAS = "retryAfterSeconds";
var _rOF = "recipeOutputFormat";
var _ra = "retry-after";
var _s = "scope";
var _sET = "s3EndpointType";
var _st = "status";
var _tA = "targetArn";
var _tF = "topologyFilter";
var _tGA = "thingGroupArn";
var _tK = "tagKeys";
var _xaiet = "x-amz-iot-endpoint-type";

// src/commands/AssociateServiceRoleToAccountCommand.ts
var AssociateServiceRoleToAccountCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "AssociateServiceRoleToAccount", {}).n("GreengrassV2Client", "AssociateServiceRoleToAccountCommand").f(void 0, void 0).ser(se_AssociateServiceRoleToAccountCommand).de(de_AssociateServiceRoleToAccountCommand).build() {
  static {
    __name(this, "AssociateServiceRoleToAccountCommand");
  }
};

// src/commands/BatchAssociateClientDeviceWithCoreDeviceCommand.ts



var BatchAssociateClientDeviceWithCoreDeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "BatchAssociateClientDeviceWithCoreDevice", {}).n("GreengrassV2Client", "BatchAssociateClientDeviceWithCoreDeviceCommand").f(void 0, void 0).ser(se_BatchAssociateClientDeviceWithCoreDeviceCommand).de(de_BatchAssociateClientDeviceWithCoreDeviceCommand).build() {
  static {
    __name(this, "BatchAssociateClientDeviceWithCoreDeviceCommand");
  }
};

// src/commands/BatchDisassociateClientDeviceFromCoreDeviceCommand.ts



var BatchDisassociateClientDeviceFromCoreDeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "BatchDisassociateClientDeviceFromCoreDevice", {}).n("GreengrassV2Client", "BatchDisassociateClientDeviceFromCoreDeviceCommand").f(void 0, void 0).ser(se_BatchDisassociateClientDeviceFromCoreDeviceCommand).de(de_BatchDisassociateClientDeviceFromCoreDeviceCommand).build() {
  static {
    __name(this, "BatchDisassociateClientDeviceFromCoreDeviceCommand");
  }
};

// src/commands/CancelDeploymentCommand.ts



var CancelDeploymentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "CancelDeployment", {}).n("GreengrassV2Client", "CancelDeploymentCommand").f(void 0, void 0).ser(se_CancelDeploymentCommand).de(de_CancelDeploymentCommand).build() {
  static {
    __name(this, "CancelDeploymentCommand");
  }
};

// src/commands/CreateComponentVersionCommand.ts



var CreateComponentVersionCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "CreateComponentVersion", {}).n("GreengrassV2Client", "CreateComponentVersionCommand").f(void 0, void 0).ser(se_CreateComponentVersionCommand).de(de_CreateComponentVersionCommand).build() {
  static {
    __name(this, "CreateComponentVersionCommand");
  }
};

// src/commands/CreateDeploymentCommand.ts



var CreateDeploymentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "CreateDeployment", {}).n("GreengrassV2Client", "CreateDeploymentCommand").f(void 0, void 0).ser(se_CreateDeploymentCommand).de(de_CreateDeploymentCommand).build() {
  static {
    __name(this, "CreateDeploymentCommand");
  }
};

// src/commands/DeleteComponentCommand.ts



var DeleteComponentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "DeleteComponent", {}).n("GreengrassV2Client", "DeleteComponentCommand").f(void 0, void 0).ser(se_DeleteComponentCommand).de(de_DeleteComponentCommand).build() {
  static {
    __name(this, "DeleteComponentCommand");
  }
};

// src/commands/DeleteCoreDeviceCommand.ts



var DeleteCoreDeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "DeleteCoreDevice", {}).n("GreengrassV2Client", "DeleteCoreDeviceCommand").f(void 0, void 0).ser(se_DeleteCoreDeviceCommand).de(de_DeleteCoreDeviceCommand).build() {
  static {
    __name(this, "DeleteCoreDeviceCommand");
  }
};

// src/commands/DeleteDeploymentCommand.ts



var DeleteDeploymentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "DeleteDeployment", {}).n("GreengrassV2Client", "DeleteDeploymentCommand").f(void 0, void 0).ser(se_DeleteDeploymentCommand).de(de_DeleteDeploymentCommand).build() {
  static {
    __name(this, "DeleteDeploymentCommand");
  }
};

// src/commands/DescribeComponentCommand.ts



var DescribeComponentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "DescribeComponent", {}).n("GreengrassV2Client", "DescribeComponentCommand").f(void 0, void 0).ser(se_DescribeComponentCommand).de(de_DescribeComponentCommand).build() {
  static {
    __name(this, "DescribeComponentCommand");
  }
};

// src/commands/DisassociateServiceRoleFromAccountCommand.ts



var DisassociateServiceRoleFromAccountCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "DisassociateServiceRoleFromAccount", {}).n("GreengrassV2Client", "DisassociateServiceRoleFromAccountCommand").f(void 0, void 0).ser(se_DisassociateServiceRoleFromAccountCommand).de(de_DisassociateServiceRoleFromAccountCommand).build() {
  static {
    __name(this, "DisassociateServiceRoleFromAccountCommand");
  }
};

// src/commands/GetComponentCommand.ts



var GetComponentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "GetComponent", {}).n("GreengrassV2Client", "GetComponentCommand").f(void 0, void 0).ser(se_GetComponentCommand).de(de_GetComponentCommand).build() {
  static {
    __name(this, "GetComponentCommand");
  }
};

// src/commands/GetComponentVersionArtifactCommand.ts



var GetComponentVersionArtifactCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "GetComponentVersionArtifact", {}).n("GreengrassV2Client", "GetComponentVersionArtifactCommand").f(void 0, void 0).ser(se_GetComponentVersionArtifactCommand).de(de_GetComponentVersionArtifactCommand).build() {
  static {
    __name(this, "GetComponentVersionArtifactCommand");
  }
};

// src/commands/GetConnectivityInfoCommand.ts



var GetConnectivityInfoCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "GetConnectivityInfo", {}).n("GreengrassV2Client", "GetConnectivityInfoCommand").f(void 0, void 0).ser(se_GetConnectivityInfoCommand).de(de_GetConnectivityInfoCommand).build() {
  static {
    __name(this, "GetConnectivityInfoCommand");
  }
};

// src/commands/GetCoreDeviceCommand.ts



var GetCoreDeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "GetCoreDevice", {}).n("GreengrassV2Client", "GetCoreDeviceCommand").f(void 0, void 0).ser(se_GetCoreDeviceCommand).de(de_GetCoreDeviceCommand).build() {
  static {
    __name(this, "GetCoreDeviceCommand");
  }
};

// src/commands/GetDeploymentCommand.ts



var GetDeploymentCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "GetDeployment", {}).n("GreengrassV2Client", "GetDeploymentCommand").f(void 0, void 0).ser(se_GetDeploymentCommand).de(de_GetDeploymentCommand).build() {
  static {
    __name(this, "GetDeploymentCommand");
  }
};

// src/commands/GetServiceRoleForAccountCommand.ts



var GetServiceRoleForAccountCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "GetServiceRoleForAccount", {}).n("GreengrassV2Client", "GetServiceRoleForAccountCommand").f(void 0, void 0).ser(se_GetServiceRoleForAccountCommand).de(de_GetServiceRoleForAccountCommand).build() {
  static {
    __name(this, "GetServiceRoleForAccountCommand");
  }
};

// src/commands/ListClientDevicesAssociatedWithCoreDeviceCommand.ts



var ListClientDevicesAssociatedWithCoreDeviceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "ListClientDevicesAssociatedWithCoreDevice", {}).n("GreengrassV2Client", "ListClientDevicesAssociatedWithCoreDeviceCommand").f(void 0, void 0).ser(se_ListClientDevicesAssociatedWithCoreDeviceCommand).de(de_ListClientDevicesAssociatedWithCoreDeviceCommand).build() {
  static {
    __name(this, "ListClientDevicesAssociatedWithCoreDeviceCommand");
  }
};

// src/commands/ListComponentsCommand.ts



var ListComponentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "ListComponents", {}).n("GreengrassV2Client", "ListComponentsCommand").f(void 0, void 0).ser(se_ListComponentsCommand).de(de_ListComponentsCommand).build() {
  static {
    __name(this, "ListComponentsCommand");
  }
};

// src/commands/ListComponentVersionsCommand.ts



var ListComponentVersionsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "ListComponentVersions", {}).n("GreengrassV2Client", "ListComponentVersionsCommand").f(void 0, void 0).ser(se_ListComponentVersionsCommand).de(de_ListComponentVersionsCommand).build() {
  static {
    __name(this, "ListComponentVersionsCommand");
  }
};

// src/commands/ListCoreDevicesCommand.ts



var ListCoreDevicesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "ListCoreDevices", {}).n("GreengrassV2Client", "ListCoreDevicesCommand").f(void 0, void 0).ser(se_ListCoreDevicesCommand).de(de_ListCoreDevicesCommand).build() {
  static {
    __name(this, "ListCoreDevicesCommand");
  }
};

// src/commands/ListDeploymentsCommand.ts



var ListDeploymentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "ListDeployments", {}).n("GreengrassV2Client", "ListDeploymentsCommand").f(void 0, void 0).ser(se_ListDeploymentsCommand).de(de_ListDeploymentsCommand).build() {
  static {
    __name(this, "ListDeploymentsCommand");
  }
};

// src/commands/ListEffectiveDeploymentsCommand.ts



var ListEffectiveDeploymentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "ListEffectiveDeployments", {}).n("GreengrassV2Client", "ListEffectiveDeploymentsCommand").f(void 0, void 0).ser(se_ListEffectiveDeploymentsCommand).de(de_ListEffectiveDeploymentsCommand).build() {
  static {
    __name(this, "ListEffectiveDeploymentsCommand");
  }
};

// src/commands/ListInstalledComponentsCommand.ts



var ListInstalledComponentsCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "ListInstalledComponents", {}).n("GreengrassV2Client", "ListInstalledComponentsCommand").f(void 0, void 0).ser(se_ListInstalledComponentsCommand).de(de_ListInstalledComponentsCommand).build() {
  static {
    __name(this, "ListInstalledComponentsCommand");
  }
};

// src/commands/ListTagsForResourceCommand.ts



var ListTagsForResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "ListTagsForResource", {}).n("GreengrassV2Client", "ListTagsForResourceCommand").f(void 0, void 0).ser(se_ListTagsForResourceCommand).de(de_ListTagsForResourceCommand).build() {
  static {
    __name(this, "ListTagsForResourceCommand");
  }
};

// src/commands/ResolveComponentCandidatesCommand.ts



var ResolveComponentCandidatesCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "ResolveComponentCandidates", {}).n("GreengrassV2Client", "ResolveComponentCandidatesCommand").f(void 0, void 0).ser(se_ResolveComponentCandidatesCommand).de(de_ResolveComponentCandidatesCommand).build() {
  static {
    __name(this, "ResolveComponentCandidatesCommand");
  }
};

// src/commands/TagResourceCommand.ts



var TagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "TagResource", {}).n("GreengrassV2Client", "TagResourceCommand").f(void 0, void 0).ser(se_TagResourceCommand).de(de_TagResourceCommand).build() {
  static {
    __name(this, "TagResourceCommand");
  }
};

// src/commands/UntagResourceCommand.ts



var UntagResourceCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "UntagResource", {}).n("GreengrassV2Client", "UntagResourceCommand").f(void 0, void 0).ser(se_UntagResourceCommand).de(de_UntagResourceCommand).build() {
  static {
    __name(this, "UntagResourceCommand");
  }
};

// src/commands/UpdateConnectivityInfoCommand.ts



var UpdateConnectivityInfoCommand = class extends import_smithy_client.Command.classBuilder().ep(commonParams).m(function(Command, cs, config, o) {
  return [
    (0, import_middleware_serde.getSerdePlugin)(config, this.serialize, this.deserialize),
    (0, import_middleware_endpoint.getEndpointPlugin)(config, Command.getEndpointParameterInstructions())
  ];
}).s("GreengrassV2", "UpdateConnectivityInfo", {}).n("GreengrassV2Client", "UpdateConnectivityInfoCommand").f(void 0, void 0).ser(se_UpdateConnectivityInfoCommand).de(de_UpdateConnectivityInfoCommand).build() {
  static {
    __name(this, "UpdateConnectivityInfoCommand");
  }
};

// src/GreengrassV2.ts
var commands = {
  AssociateServiceRoleToAccountCommand,
  BatchAssociateClientDeviceWithCoreDeviceCommand,
  BatchDisassociateClientDeviceFromCoreDeviceCommand,
  CancelDeploymentCommand,
  CreateComponentVersionCommand,
  CreateDeploymentCommand,
  DeleteComponentCommand,
  DeleteCoreDeviceCommand,
  DeleteDeploymentCommand,
  DescribeComponentCommand,
  DisassociateServiceRoleFromAccountCommand,
  GetComponentCommand,
  GetComponentVersionArtifactCommand,
  GetConnectivityInfoCommand,
  GetCoreDeviceCommand,
  GetDeploymentCommand,
  GetServiceRoleForAccountCommand,
  ListClientDevicesAssociatedWithCoreDeviceCommand,
  ListComponentsCommand,
  ListComponentVersionsCommand,
  ListCoreDevicesCommand,
  ListDeploymentsCommand,
  ListEffectiveDeploymentsCommand,
  ListInstalledComponentsCommand,
  ListTagsForResourceCommand,
  ResolveComponentCandidatesCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateConnectivityInfoCommand
};
var GreengrassV2 = class extends GreengrassV2Client {
  static {
    __name(this, "GreengrassV2");
  }
};
(0, import_smithy_client.createAggregatedClient)(commands, GreengrassV2);

// src/pagination/ListClientDevicesAssociatedWithCoreDevicePaginator.ts

var paginateListClientDevicesAssociatedWithCoreDevice = (0, import_core.createPaginator)(GreengrassV2Client, ListClientDevicesAssociatedWithCoreDeviceCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListComponentVersionsPaginator.ts

var paginateListComponentVersions = (0, import_core.createPaginator)(GreengrassV2Client, ListComponentVersionsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListComponentsPaginator.ts

var paginateListComponents = (0, import_core.createPaginator)(GreengrassV2Client, ListComponentsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListCoreDevicesPaginator.ts

var paginateListCoreDevices = (0, import_core.createPaginator)(GreengrassV2Client, ListCoreDevicesCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListDeploymentsPaginator.ts

var paginateListDeployments = (0, import_core.createPaginator)(GreengrassV2Client, ListDeploymentsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListEffectiveDeploymentsPaginator.ts

var paginateListEffectiveDeployments = (0, import_core.createPaginator)(GreengrassV2Client, ListEffectiveDeploymentsCommand, "nextToken", "nextToken", "maxResults");

// src/pagination/ListInstalledComponentsPaginator.ts

var paginateListInstalledComponents = (0, import_core.createPaginator)(GreengrassV2Client, ListInstalledComponentsCommand, "nextToken", "nextToken", "maxResults");
// Annotate the CommonJS export names for ESM import in node:

0 && (module.exports = {
  GreengrassV2ServiceException,
  __Client,
  GreengrassV2Client,
  GreengrassV2,
  $Command,
  AssociateServiceRoleToAccountCommand,
  BatchAssociateClientDeviceWithCoreDeviceCommand,
  BatchDisassociateClientDeviceFromCoreDeviceCommand,
  CancelDeploymentCommand,
  CreateComponentVersionCommand,
  CreateDeploymentCommand,
  DeleteComponentCommand,
  DeleteCoreDeviceCommand,
  DeleteDeploymentCommand,
  DescribeComponentCommand,
  DisassociateServiceRoleFromAccountCommand,
  GetComponentCommand,
  GetComponentVersionArtifactCommand,
  GetConnectivityInfoCommand,
  GetCoreDeviceCommand,
  GetDeploymentCommand,
  GetServiceRoleForAccountCommand,
  ListClientDevicesAssociatedWithCoreDeviceCommand,
  ListComponentVersionsCommand,
  ListComponentsCommand,
  ListCoreDevicesCommand,
  ListDeploymentsCommand,
  ListEffectiveDeploymentsCommand,
  ListInstalledComponentsCommand,
  ListTagsForResourceCommand,
  ResolveComponentCandidatesCommand,
  TagResourceCommand,
  UntagResourceCommand,
  UpdateConnectivityInfoCommand,
  paginateListClientDevicesAssociatedWithCoreDevice,
  paginateListComponentVersions,
  paginateListComponents,
  paginateListCoreDevices,
  paginateListDeployments,
  paginateListEffectiveDeployments,
  paginateListInstalledComponents,
  AccessDeniedException,
  InternalServerException,
  ValidationExceptionReason,
  ValidationException,
  ResourceNotFoundException,
  ThrottlingException,
  ConflictException,
  CloudComponentState,
  VendorGuidance,
  ComponentDependencyType,
  ComponentVisibilityScope,
  CoreDeviceStatus,
  LambdaEventSourceType,
  LambdaInputPayloadEncodingType,
  LambdaFilesystemPermission,
  LambdaIsolationMode,
  RequestAlreadyInProgressException,
  ServiceQuotaExceededException,
  DeploymentComponentUpdatePolicyAction,
  DeploymentFailureHandlingPolicy,
  IoTJobAbortAction,
  IoTJobExecutionFailureType,
  DeploymentStatus,
  DeploymentHistoryFilter,
  EffectiveDeploymentExecutionStatus,
  RecipeOutputFormat,
  IotEndpointType,
  S3EndpointType,
  InstalledComponentTopologyFilter,
  InstalledComponentLifecycleState
});

