import { HttpHandlerOptions as __HttpHandlerOptions } from "@smithy/types";
import {
  AssociateServiceRoleToAccountCommandInput,
  AssociateServiceRoleToAccountCommandOutput,
} from "./commands/AssociateServiceRoleToAccountCommand";
import {
  BatchAssociateClientDeviceWithCoreDeviceCommandInput,
  BatchAssociateClientDeviceWithCoreDeviceCommandOutput,
} from "./commands/BatchAssociateClientDeviceWithCoreDeviceCommand";
import {
  BatchDisassociateClientDeviceFromCoreDeviceCommandInput,
  BatchDisassociateClientDeviceFromCoreDeviceCommandOutput,
} from "./commands/BatchDisassociateClientDeviceFromCoreDeviceCommand";
import {
  CancelDeploymentCommandInput,
  CancelDeploymentCommandOutput,
} from "./commands/CancelDeploymentCommand";
import {
  CreateComponentVersionCommandInput,
  CreateComponentVersionCommandOutput,
} from "./commands/CreateComponentVersionCommand";
import {
  CreateDeploymentCommandInput,
  CreateDeploymentCommandOutput,
} from "./commands/CreateDeploymentCommand";
import {
  DeleteComponentCommandInput,
  DeleteComponentCommandOutput,
} from "./commands/DeleteComponentCommand";
import {
  DeleteCoreDeviceCommandInput,
  DeleteCoreDeviceCommandOutput,
} from "./commands/DeleteCoreDeviceCommand";
import {
  DeleteDeploymentCommandInput,
  DeleteDeploymentCommandOutput,
} from "./commands/DeleteDeploymentCommand";
import {
  DescribeComponentCommandInput,
  DescribeComponentCommandOutput,
} from "./commands/DescribeComponentCommand";
import {
  DisassociateServiceRoleFromAccountCommandInput,
  DisassociateServiceRoleFromAccountCommandOutput,
} from "./commands/DisassociateServiceRoleFromAccountCommand";
import {
  GetComponentCommandInput,
  GetComponentCommandOutput,
} from "./commands/GetComponentCommand";
import {
  GetComponentVersionArtifactCommandInput,
  GetComponentVersionArtifactCommandOutput,
} from "./commands/GetComponentVersionArtifactCommand";
import {
  GetConnectivityInfoCommandInput,
  GetConnectivityInfoCommandOutput,
} from "./commands/GetConnectivityInfoCommand";
import {
  GetCoreDeviceCommandInput,
  GetCoreDeviceCommandOutput,
} from "./commands/GetCoreDeviceCommand";
import {
  GetDeploymentCommandInput,
  GetDeploymentCommandOutput,
} from "./commands/GetDeploymentCommand";
import {
  GetServiceRoleForAccountCommandInput,
  GetServiceRoleForAccountCommandOutput,
} from "./commands/GetServiceRoleForAccountCommand";
import {
  ListClientDevicesAssociatedWithCoreDeviceCommandInput,
  ListClientDevicesAssociatedWithCoreDeviceCommandOutput,
} from "./commands/ListClientDevicesAssociatedWithCoreDeviceCommand";
import {
  ListComponentsCommandInput,
  ListComponentsCommandOutput,
} from "./commands/ListComponentsCommand";
import {
  ListComponentVersionsCommandInput,
  ListComponentVersionsCommandOutput,
} from "./commands/ListComponentVersionsCommand";
import {
  ListCoreDevicesCommandInput,
  ListCoreDevicesCommandOutput,
} from "./commands/ListCoreDevicesCommand";
import {
  ListDeploymentsCommandInput,
  ListDeploymentsCommandOutput,
} from "./commands/ListDeploymentsCommand";
import {
  ListEffectiveDeploymentsCommandInput,
  ListEffectiveDeploymentsCommandOutput,
} from "./commands/ListEffectiveDeploymentsCommand";
import {
  ListInstalledComponentsCommandInput,
  ListInstalledComponentsCommandOutput,
} from "./commands/ListInstalledComponentsCommand";
import {
  ListTagsForResourceCommandInput,
  ListTagsForResourceCommandOutput,
} from "./commands/ListTagsForResourceCommand";
import {
  ResolveComponentCandidatesCommandInput,
  ResolveComponentCandidatesCommandOutput,
} from "./commands/ResolveComponentCandidatesCommand";
import {
  TagResourceCommandInput,
  TagResourceCommandOutput,
} from "./commands/TagResourceCommand";
import {
  UntagResourceCommandInput,
  UntagResourceCommandOutput,
} from "./commands/UntagResourceCommand";
import {
  UpdateConnectivityInfoCommandInput,
  UpdateConnectivityInfoCommandOutput,
} from "./commands/UpdateConnectivityInfoCommand";
import { GreengrassV2Client } from "./GreengrassV2Client";
export interface GreengrassV2 {
  associateServiceRoleToAccount(
    args: AssociateServiceRoleToAccountCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<AssociateServiceRoleToAccountCommandOutput>;
  associateServiceRoleToAccount(
    args: AssociateServiceRoleToAccountCommandInput,
    cb: (err: any, data?: AssociateServiceRoleToAccountCommandOutput) => void
  ): void;
  associateServiceRoleToAccount(
    args: AssociateServiceRoleToAccountCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: AssociateServiceRoleToAccountCommandOutput) => void
  ): void;
  batchAssociateClientDeviceWithCoreDevice(
    args: BatchAssociateClientDeviceWithCoreDeviceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchAssociateClientDeviceWithCoreDeviceCommandOutput>;
  batchAssociateClientDeviceWithCoreDevice(
    args: BatchAssociateClientDeviceWithCoreDeviceCommandInput,
    cb: (
      err: any,
      data?: BatchAssociateClientDeviceWithCoreDeviceCommandOutput
    ) => void
  ): void;
  batchAssociateClientDeviceWithCoreDevice(
    args: BatchAssociateClientDeviceWithCoreDeviceCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: BatchAssociateClientDeviceWithCoreDeviceCommandOutput
    ) => void
  ): void;
  batchDisassociateClientDeviceFromCoreDevice(
    args: BatchDisassociateClientDeviceFromCoreDeviceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<BatchDisassociateClientDeviceFromCoreDeviceCommandOutput>;
  batchDisassociateClientDeviceFromCoreDevice(
    args: BatchDisassociateClientDeviceFromCoreDeviceCommandInput,
    cb: (
      err: any,
      data?: BatchDisassociateClientDeviceFromCoreDeviceCommandOutput
    ) => void
  ): void;
  batchDisassociateClientDeviceFromCoreDevice(
    args: BatchDisassociateClientDeviceFromCoreDeviceCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: BatchDisassociateClientDeviceFromCoreDeviceCommandOutput
    ) => void
  ): void;
  cancelDeployment(
    args: CancelDeploymentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CancelDeploymentCommandOutput>;
  cancelDeployment(
    args: CancelDeploymentCommandInput,
    cb: (err: any, data?: CancelDeploymentCommandOutput) => void
  ): void;
  cancelDeployment(
    args: CancelDeploymentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CancelDeploymentCommandOutput) => void
  ): void;
  createComponentVersion(): Promise<CreateComponentVersionCommandOutput>;
  createComponentVersion(
    args: CreateComponentVersionCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateComponentVersionCommandOutput>;
  createComponentVersion(
    args: CreateComponentVersionCommandInput,
    cb: (err: any, data?: CreateComponentVersionCommandOutput) => void
  ): void;
  createComponentVersion(
    args: CreateComponentVersionCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateComponentVersionCommandOutput) => void
  ): void;
  createDeployment(
    args: CreateDeploymentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<CreateDeploymentCommandOutput>;
  createDeployment(
    args: CreateDeploymentCommandInput,
    cb: (err: any, data?: CreateDeploymentCommandOutput) => void
  ): void;
  createDeployment(
    args: CreateDeploymentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: CreateDeploymentCommandOutput) => void
  ): void;
  deleteComponent(
    args: DeleteComponentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteComponentCommandOutput>;
  deleteComponent(
    args: DeleteComponentCommandInput,
    cb: (err: any, data?: DeleteComponentCommandOutput) => void
  ): void;
  deleteComponent(
    args: DeleteComponentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteComponentCommandOutput) => void
  ): void;
  deleteCoreDevice(
    args: DeleteCoreDeviceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteCoreDeviceCommandOutput>;
  deleteCoreDevice(
    args: DeleteCoreDeviceCommandInput,
    cb: (err: any, data?: DeleteCoreDeviceCommandOutput) => void
  ): void;
  deleteCoreDevice(
    args: DeleteCoreDeviceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteCoreDeviceCommandOutput) => void
  ): void;
  deleteDeployment(
    args: DeleteDeploymentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DeleteDeploymentCommandOutput>;
  deleteDeployment(
    args: DeleteDeploymentCommandInput,
    cb: (err: any, data?: DeleteDeploymentCommandOutput) => void
  ): void;
  deleteDeployment(
    args: DeleteDeploymentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DeleteDeploymentCommandOutput) => void
  ): void;
  describeComponent(
    args: DescribeComponentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DescribeComponentCommandOutput>;
  describeComponent(
    args: DescribeComponentCommandInput,
    cb: (err: any, data?: DescribeComponentCommandOutput) => void
  ): void;
  describeComponent(
    args: DescribeComponentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: DescribeComponentCommandOutput) => void
  ): void;
  disassociateServiceRoleFromAccount(): Promise<DisassociateServiceRoleFromAccountCommandOutput>;
  disassociateServiceRoleFromAccount(
    args: DisassociateServiceRoleFromAccountCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<DisassociateServiceRoleFromAccountCommandOutput>;
  disassociateServiceRoleFromAccount(
    args: DisassociateServiceRoleFromAccountCommandInput,
    cb: (
      err: any,
      data?: DisassociateServiceRoleFromAccountCommandOutput
    ) => void
  ): void;
  disassociateServiceRoleFromAccount(
    args: DisassociateServiceRoleFromAccountCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: DisassociateServiceRoleFromAccountCommandOutput
    ) => void
  ): void;
  getComponent(
    args: GetComponentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetComponentCommandOutput>;
  getComponent(
    args: GetComponentCommandInput,
    cb: (err: any, data?: GetComponentCommandOutput) => void
  ): void;
  getComponent(
    args: GetComponentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetComponentCommandOutput) => void
  ): void;
  getComponentVersionArtifact(
    args: GetComponentVersionArtifactCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetComponentVersionArtifactCommandOutput>;
  getComponentVersionArtifact(
    args: GetComponentVersionArtifactCommandInput,
    cb: (err: any, data?: GetComponentVersionArtifactCommandOutput) => void
  ): void;
  getComponentVersionArtifact(
    args: GetComponentVersionArtifactCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetComponentVersionArtifactCommandOutput) => void
  ): void;
  getConnectivityInfo(
    args: GetConnectivityInfoCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetConnectivityInfoCommandOutput>;
  getConnectivityInfo(
    args: GetConnectivityInfoCommandInput,
    cb: (err: any, data?: GetConnectivityInfoCommandOutput) => void
  ): void;
  getConnectivityInfo(
    args: GetConnectivityInfoCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetConnectivityInfoCommandOutput) => void
  ): void;
  getCoreDevice(
    args: GetCoreDeviceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetCoreDeviceCommandOutput>;
  getCoreDevice(
    args: GetCoreDeviceCommandInput,
    cb: (err: any, data?: GetCoreDeviceCommandOutput) => void
  ): void;
  getCoreDevice(
    args: GetCoreDeviceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetCoreDeviceCommandOutput) => void
  ): void;
  getDeployment(
    args: GetDeploymentCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetDeploymentCommandOutput>;
  getDeployment(
    args: GetDeploymentCommandInput,
    cb: (err: any, data?: GetDeploymentCommandOutput) => void
  ): void;
  getDeployment(
    args: GetDeploymentCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetDeploymentCommandOutput) => void
  ): void;
  getServiceRoleForAccount(): Promise<GetServiceRoleForAccountCommandOutput>;
  getServiceRoleForAccount(
    args: GetServiceRoleForAccountCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<GetServiceRoleForAccountCommandOutput>;
  getServiceRoleForAccount(
    args: GetServiceRoleForAccountCommandInput,
    cb: (err: any, data?: GetServiceRoleForAccountCommandOutput) => void
  ): void;
  getServiceRoleForAccount(
    args: GetServiceRoleForAccountCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: GetServiceRoleForAccountCommandOutput) => void
  ): void;
  listClientDevicesAssociatedWithCoreDevice(
    args: ListClientDevicesAssociatedWithCoreDeviceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListClientDevicesAssociatedWithCoreDeviceCommandOutput>;
  listClientDevicesAssociatedWithCoreDevice(
    args: ListClientDevicesAssociatedWithCoreDeviceCommandInput,
    cb: (
      err: any,
      data?: ListClientDevicesAssociatedWithCoreDeviceCommandOutput
    ) => void
  ): void;
  listClientDevicesAssociatedWithCoreDevice(
    args: ListClientDevicesAssociatedWithCoreDeviceCommandInput,
    options: __HttpHandlerOptions,
    cb: (
      err: any,
      data?: ListClientDevicesAssociatedWithCoreDeviceCommandOutput
    ) => void
  ): void;
  listComponents(): Promise<ListComponentsCommandOutput>;
  listComponents(
    args: ListComponentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListComponentsCommandOutput>;
  listComponents(
    args: ListComponentsCommandInput,
    cb: (err: any, data?: ListComponentsCommandOutput) => void
  ): void;
  listComponents(
    args: ListComponentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListComponentsCommandOutput) => void
  ): void;
  listComponentVersions(
    args: ListComponentVersionsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListComponentVersionsCommandOutput>;
  listComponentVersions(
    args: ListComponentVersionsCommandInput,
    cb: (err: any, data?: ListComponentVersionsCommandOutput) => void
  ): void;
  listComponentVersions(
    args: ListComponentVersionsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListComponentVersionsCommandOutput) => void
  ): void;
  listCoreDevices(): Promise<ListCoreDevicesCommandOutput>;
  listCoreDevices(
    args: ListCoreDevicesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListCoreDevicesCommandOutput>;
  listCoreDevices(
    args: ListCoreDevicesCommandInput,
    cb: (err: any, data?: ListCoreDevicesCommandOutput) => void
  ): void;
  listCoreDevices(
    args: ListCoreDevicesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListCoreDevicesCommandOutput) => void
  ): void;
  listDeployments(): Promise<ListDeploymentsCommandOutput>;
  listDeployments(
    args: ListDeploymentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListDeploymentsCommandOutput>;
  listDeployments(
    args: ListDeploymentsCommandInput,
    cb: (err: any, data?: ListDeploymentsCommandOutput) => void
  ): void;
  listDeployments(
    args: ListDeploymentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListDeploymentsCommandOutput) => void
  ): void;
  listEffectiveDeployments(
    args: ListEffectiveDeploymentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListEffectiveDeploymentsCommandOutput>;
  listEffectiveDeployments(
    args: ListEffectiveDeploymentsCommandInput,
    cb: (err: any, data?: ListEffectiveDeploymentsCommandOutput) => void
  ): void;
  listEffectiveDeployments(
    args: ListEffectiveDeploymentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListEffectiveDeploymentsCommandOutput) => void
  ): void;
  listInstalledComponents(
    args: ListInstalledComponentsCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListInstalledComponentsCommandOutput>;
  listInstalledComponents(
    args: ListInstalledComponentsCommandInput,
    cb: (err: any, data?: ListInstalledComponentsCommandOutput) => void
  ): void;
  listInstalledComponents(
    args: ListInstalledComponentsCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListInstalledComponentsCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ListTagsForResourceCommandOutput>;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  listTagsForResource(
    args: ListTagsForResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ListTagsForResourceCommandOutput) => void
  ): void;
  resolveComponentCandidates(): Promise<ResolveComponentCandidatesCommandOutput>;
  resolveComponentCandidates(
    args: ResolveComponentCandidatesCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<ResolveComponentCandidatesCommandOutput>;
  resolveComponentCandidates(
    args: ResolveComponentCandidatesCommandInput,
    cb: (err: any, data?: ResolveComponentCandidatesCommandOutput) => void
  ): void;
  resolveComponentCandidates(
    args: ResolveComponentCandidatesCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: ResolveComponentCandidatesCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<TagResourceCommandOutput>;
  tagResource(
    args: TagResourceCommandInput,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  tagResource(
    args: TagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: TagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UntagResourceCommandOutput>;
  untagResource(
    args: UntagResourceCommandInput,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  untagResource(
    args: UntagResourceCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UntagResourceCommandOutput) => void
  ): void;
  updateConnectivityInfo(
    args: UpdateConnectivityInfoCommandInput,
    options?: __HttpHandlerOptions
  ): Promise<UpdateConnectivityInfoCommandOutput>;
  updateConnectivityInfo(
    args: UpdateConnectivityInfoCommandInput,
    cb: (err: any, data?: UpdateConnectivityInfoCommandOutput) => void
  ): void;
  updateConnectivityInfo(
    args: UpdateConnectivityInfoCommandInput,
    options: __HttpHandlerOptions,
    cb: (err: any, data?: UpdateConnectivityInfoCommandOutput) => void
  ): void;
}
export declare class GreengrassV2
  extends GreengrassV2Client
  implements GreengrassV2 {}
