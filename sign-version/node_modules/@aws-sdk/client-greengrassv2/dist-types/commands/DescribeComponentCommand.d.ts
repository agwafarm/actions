import { Command as $Command } from "@smithy/smithy-client";
import { MetadataBearer as __MetadataBearer } from "@smithy/types";
import { GreengrassV2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes } from "../GreengrassV2Client";
import { DescribeComponentRequest, DescribeComponentResponse } from "../models/models_0";
/**
 * @public
 */
export type { __MetadataBearer };
export { $Command };
/**
 * @public
 *
 * The input for {@link DescribeComponentCommand}.
 */
export interface DescribeComponentCommandInput extends DescribeComponentRequest {
}
/**
 * @public
 *
 * The output of {@link DescribeComponentCommand}.
 */
export interface DescribeComponentCommandOutput extends DescribeComponentResponse, __MetadataBearer {
}
declare const DescribeComponentCommand_base: {
    new (input: DescribeComponentCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeComponentCommandInput, DescribeComponentCommandOutput, GreengrassV2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    new (__0_0: DescribeComponentCommandInput): import("@smithy/smithy-client").CommandImpl<DescribeComponentCommandInput, DescribeComponentCommandOutput, GreengrassV2ClientResolvedConfig, ServiceInputTypes, ServiceOutputTypes>;
    getEndpointParameterInstructions(): import("@smithy/middleware-endpoint").EndpointParameterInstructions;
};
/**
 * <p>Retrieves metadata for a version of a component.</p>
 * @example
 * Use a bare-bones client and the command you need to make an API call.
 * ```javascript
 * import { GreengrassV2Client, DescribeComponentCommand } from "@aws-sdk/client-greengrassv2"; // ES Modules import
 * // const { GreengrassV2Client, DescribeComponentCommand } = require("@aws-sdk/client-greengrassv2"); // CommonJS import
 * const client = new GreengrassV2Client(config);
 * const input = { // DescribeComponentRequest
 *   arn: "STRING_VALUE", // required
 * };
 * const command = new DescribeComponentCommand(input);
 * const response = await client.send(command);
 * // { // DescribeComponentResponse
 * //   arn: "STRING_VALUE",
 * //   componentName: "STRING_VALUE",
 * //   componentVersion: "STRING_VALUE",
 * //   creationTimestamp: new Date("TIMESTAMP"),
 * //   publisher: "STRING_VALUE",
 * //   description: "STRING_VALUE",
 * //   status: { // CloudComponentStatus
 * //     componentState: "REQUESTED" || "INITIATED" || "DEPLOYABLE" || "FAILED" || "DEPRECATED",
 * //     message: "STRING_VALUE",
 * //     errors: { // StringMap
 * //       "<keys>": "STRING_VALUE",
 * //     },
 * //     vendorGuidance: "ACTIVE" || "DISCONTINUED" || "DELETED",
 * //     vendorGuidanceMessage: "STRING_VALUE",
 * //   },
 * //   platforms: [ // ComponentPlatformList
 * //     { // ComponentPlatform
 * //       name: "STRING_VALUE",
 * //       attributes: { // PlatformAttributesMap
 * //         "<keys>": "STRING_VALUE",
 * //       },
 * //     },
 * //   ],
 * //   tags: { // TagMap
 * //     "<keys>": "STRING_VALUE",
 * //   },
 * // };
 *
 * ```
 *
 * @param DescribeComponentCommandInput - {@link DescribeComponentCommandInput}
 * @returns {@link DescribeComponentCommandOutput}
 * @see {@link DescribeComponentCommandInput} for command's `input` shape.
 * @see {@link DescribeComponentCommandOutput} for command's `response` shape.
 * @see {@link GreengrassV2ClientResolvedConfig | config} for GreengrassV2Client's `config` shape.
 *
 * @throws {@link AccessDeniedException} (client fault)
 *  <p>You don't have permission to perform the action.</p>
 *
 * @throws {@link InternalServerException} (server fault)
 *  <p>IoT Greengrass can't process your request right now. Try again later.</p>
 *
 * @throws {@link ResourceNotFoundException} (client fault)
 *  <p>The requested resource can't be found.</p>
 *
 * @throws {@link ThrottlingException} (client fault)
 *  <p>Your request exceeded a request rate quota. For example, you might have exceeded the
 *       amount of times that you can retrieve device or deployment status per second.</p>
 *
 * @throws {@link ValidationException} (client fault)
 *  <p>The request isn't valid. This can occur if your request contains malformed JSON or
 *       unsupported characters.</p>
 *
 * @throws {@link GreengrassV2ServiceException}
 * <p>Base exception class for all service exceptions from GreengrassV2 service.</p>
 *
 * @public
 */
export declare class DescribeComponentCommand extends DescribeComponentCommand_base {
    /** @internal type navigation helper, not in runtime. */
    protected static __types: {
        api: {
            input: DescribeComponentRequest;
            output: DescribeComponentResponse;
        };
        sdk: {
            input: DescribeComponentCommandInput;
            output: DescribeComponentCommandOutput;
        };
    };
}
