name: 'py-monorepo-publish'
description: 'Publish Python Package'
inputs:
  account:
    description: "Code Artifact Owner Account Number"
    required: true
  repo:
    description: "Code Artifact Repo"
    required: true
  domain:
    description: "Code Artifact Domain"
    required: true
  library-version:
    description: "Library Version to publish"
    required: false
    default: "auto"
runs:
  using: "composite"
  steps:
    - run: |
          pip3 install twine==3.4.1
          owner_account=${{ inputs.account }}
          repo=${{ inputs.repo }}
          domain=${{ inputs.domain }}
          
          # Authenticate with Code Artifact
          export TWINE_USERNAME=aws
          export TWINE_PASSWORD=$(aws codeartifact get-authorization-token --domain $domain --domain-owner $owner_account --query authorizationToken --output text)
          export TWINE_REPOSITORY_URL=$(aws codeartifact get-repository-endpoint --domain $domain --domain-owner $owner_account --repository $repo --format pypi --query repositoryEndpoint --output text)
          export CODEARTIFACT_AUTH_TOKEN=$(aws codeartifact get-authorization-token --domain $domain --domain-owner $owner_account --query authorizationToken --output text)
          
          # Compute Library Tag
          event_name=$GITHUB_EVENT_NAME
          echo github event name $event_name

          if [ "$event_name" = "pull_request" ]; then
             git_ref=$GITHUB_HEAD_REF
          else
             git_ref=$GITHUB_REF
          fi
          echo git ref $git_ref

          branch_name=$(echo $git_ref | sed -e 's/^refs\/heads\///')
          echo branch name $branch_name

          if [ "${{ inputs.library-version }}" != "auto" ]; then
             export AGWA_SERVICE_LIBRARY_TAG=${{ inputs.library-version }}
          elif [ "$branch_name" = "main" ] || [ "$branch_name" = "master" ]; then
             export AGWA_SERVICE_LIBRARY_TAG=latest
          else
             user_name=$(echo $GITHUB_ACTOR | sed -e 's/[^[:alnum:]]+/_/g')
             user_name=$(echo $user_name | sed -e 's/\(.*\)/\L\1/')
             echo user name $user_name 
             export AGWA_SERVICE_LIBRARY_TAG=edge-$user_name
          fi

          echo publishing library version $AGWA_SERVICE_LIBRARY_TAG

          # Build and Publish Monorepo
          IFS=$'\n'
          set -f
          libraries_list=$(find . -maxdepth 1 -type d)
          export MONOREPO_DIR=$(pwd)
          for d in $libraries_list; do
              cd $MONOREPO_DIR
              if [ -f "$d/setup.py" ]; then
                  cd $d
                  export CURRENT_DIR=$(pwd)
                  export DIR_NAME=$(basename $CURRENT_DIR)
                  export DIR_NAME=${DIR_NAME//[_]/\-}
                  if [[ $DIR_NAME == agwa-* ]]; then
                    export PACKAGE_NAME="$DIR_NAME"
                  else
                    export PACKAGE_NAME="agwa-$DIR_NAME"
                  fi 
                  echo package name: $PACKAGE_NAME
                  (aws codeartifact delete-package-versions --domain $domain --domain-owner $owner_account --repository $repo --format pypi --package $PACKAGE_NAME --versions $AGWA_SERVICE_LIBRARY_TAG || echo "first publish! congrats!") & sleep 10
                  python setup.py sdist
                  twine upload --non-interactive --verbose dist/*
              fi
          done
          
      shell: bash