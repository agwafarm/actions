name: 'pack'
description: 'Packakge RC for this service'
inputs:
  library-tag:
    description: 'Service Library tag to use'
    required: true
runs:
  using: "composite"
  steps:
    - run: |
          
          app_service_name=$(echo $GITHUB_REPOSITORY | sed -e 's/^agwafarm\///')
          app_service_name=$(echo $app_service_name | sed -e 's/^agwa\-//')
          app_service_name=$(echo $app_service_name | sed -e 's/^\-service//')
          echo deploying service $app_service_name

          git_sha=$GITHUB_SHA
          echo git sha $git_sha

          event_name=$GITHUB_EVENT_NAME
          echo github event name $event_name

          if [ "$event_name" = "pull_request" ]; then
             git_ref=$GITHUB_HEAD_REF
          else
             git_ref=$GITHUB_REF
          fi
          echo git ref $git_ref

          branch_name=$(echo $git_ref | sed -e 's/^refs\/heads\///')
          echo branch name $branch_name

          if [ "$branch_name" = "main" ] || [ "$branch_name" = "master" ]; then
             target_env=test
             export AGWA_SERVICE_LIBRARY_TAG=latest
          else
             user_name=$(echo $GITHUB_ACTOR | sed -e 's/[^[:alnum:]]+/_/g')
             user_name=$(echo $user_name | sed -e 's/\(.*\)/\L\1/')
             echo user name $user_name 
             
             #  TODO add -$user_name
             export AGWA_SERVICE_LIBRARY_TAG=dev
             
             #  TODO add -$user_name
             target_env=dev-$user_name
          fi

          echo target env $target_env

          s3_key_prefix=s3://agwa-cloud-lambda-sourcecode/$target_env/$app_service_name/$git_sha
          echo s3 prefix $s3_key_prefix

          export AGWA_SERVICE_LIBRARY_TAG=${{ inputs.library-tag }}
          current_folder=$(pwd)
          common_layer_path=artifacts/layers/common
          asset_name=asset.zip

          mkdir -p $common_layer_path
          python3 -m pip install -q -r requirements.txt --target $common_layer_path/python
          cd $common_layer_path
          zip -q -r $asset_name .
          aws s3 cp $asset_name $s3_key_prefix/layers/cloud-common.zip
          cd $current_folder

          for d in src/lambdas/*/ ; do
            func_name=$(basename "$"$d"")
            func_path=src/lambdas/${func_name}
            func_artifact_folder=artifacts/lambdas/${func_name}
            func_s3_key=$s3_key_prefix/functions/${func_name}.zip
            req_path=src/lambdas/${func_name}/requirements.txt
            layer_path=artifacts/layers/lambdas/${func_name}
            layer_s3_key=$s3_key_prefix/layers/${func_name}.zip
            
            cd $current_folder
            mkdir -p $func_artifact_folder
            if [ -f $req_path ]; then
              mkdir -p $layer_path
              python3 -m pip install -q -r $req_path --target $layer_path/python
              cd $layer_path
              zip -q -r $asset_name .
              aws s3 cp $asset_name $layer_s3_key
              cd $current_folder
            fi
            
            cd $func_path
            zip -q -r $asset_name .
            aws s3 cp $asset_name $func_s3_key
            cd $current_folder
          done

      shell: bash